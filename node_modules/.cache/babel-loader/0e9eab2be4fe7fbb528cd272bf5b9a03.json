{"ast":null,"code":"var _jsxFileName = \"/Users/meeqatsuharwardy/forms_frontend/src/components/SwitchBordCard.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { onPressSwitchBordButton } from \"../actions\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nclass SwitchBordCard extends React.Component {\n  render() {\n    const {\n      Buttons,\n      OnPressSwitch,\n      IsSwitch,\n      onPressAllOnLight,\n      onPressAllOffLight\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4 col-md-4 col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, \"Lights Indoor\"), /*#__PURE__*/React.createElement(Dropdown, {\n      as: \"ul\",\n      className: \"header-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      as: \"li\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      as: \"ul\",\n      className: \"dropdown-menu dropdown-menu-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"#\",\n      onClick: onPressAllOnLight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, \"All On\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"#\",\n      onClick: onPressAllOffLight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, \"All Off\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-unstyled basic-list ng-star-inserted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, Buttons.map((Button, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        className: !Button.NotConnected ? IsSwitch[index] ? \"ng-star-inserted text-warning\" : \"ng-star-inserted\" : \"text-danger ng-star-inserted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, Button.title, /*#__PURE__*/React.createElement(Link, {\n        to: \"#\",\n        onClick: () => OnPressSwitch(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: IsSwitch[index] === true && !Button.NotConnected ? \"badge\" : \"badge d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, \"Off\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: IsSwitch[index] === false && !Button.NotConnected ? \"badge\" : \"badge d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, \"On\")), /*#__PURE__*/React.createElement(\"span\", {\n        className: Button.NotConnected ? \"ng-star-inserted \" : \"ng-star-inserted d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 23\n        }\n      }, \"Not Connected\"));\n    }))))));\n  }\n}\nSwitchBordCard.propTypes = {};\nconst mapStateToProps = ({\n  ioTReducer\n}) => ({\n  isSecuritySystem: ioTReducer.isSecuritySystem\n});\nexport default connect(mapStateToProps, {\n  onPressSwitchBordButton\n})(SwitchBordCard);","map":{"version":3,"names":["React","connect","onPressSwitchBordButton","Dropdown","Link","SwitchBordCard","Component","render","Buttons","OnPressSwitch","IsSwitch","onPressAllOnLight","onPressAllOffLight","props","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","as","Toggle","variant","id","Menu","to","onClick","map","Button","index","key","NotConnected","title","propTypes","mapStateToProps","ioTReducer","isSecuritySystem"],"sources":["/Users/meeqatsuharwardy/forms_frontend/src/components/SwitchBordCard.js"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { onPressSwitchBordButton } from \"../actions\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SwitchBordCard extends React.Component {\r\n  render() {\r\n    const {\r\n      Buttons,\r\n      OnPressSwitch,\r\n      IsSwitch,\r\n      onPressAllOnLight,\r\n      onPressAllOffLight,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"col-lg-4 col-md-4 col-sm-12\">\r\n        <div className=\"card\">\r\n          <div className=\"header\">\r\n            <h2>Lights Indoor</h2>\r\n            <Dropdown as=\"ul\" className=\"header-dropdown\">\r\n              <Dropdown.Toggle variant=\"success\" as=\"li\" id=\"dropdown-basic\">\r\n                <Dropdown.Menu\r\n                  as=\"ul\"\r\n                  className=\"dropdown-menu dropdown-menu-right\"\r\n                >\r\n                  <li>\r\n                    <Link to=\"#\" onClick={onPressAllOnLight}>All On</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to=\"#\" onClick={onPressAllOffLight}>All Off</Link>\r\n                  </li>\r\n                </Dropdown.Menu>\r\n              </Dropdown.Toggle>\r\n            </Dropdown>\r\n            <div className=\"body\">\r\n              <ul className=\"list-unstyled basic-list ng-star-inserted\">\r\n                {Buttons.map((Button, index) => {\r\n                  return (\r\n                    <li\r\n                      key={index}\r\n                      className={\r\n                        !Button.NotConnected\r\n                          ? IsSwitch[index]\r\n                            ? \"ng-star-inserted text-warning\"\r\n                            : \"ng-star-inserted\"\r\n                          : \"text-danger ng-star-inserted\"\r\n                      }\r\n                    >\r\n                      {Button.title}\r\n                      <Link to=\"#\" onClick={() => OnPressSwitch(index)}>\r\n                        <span\r\n                          className={\r\n                            IsSwitch[index] === true && !Button.NotConnected\r\n                              ? \"badge\"\r\n                              : \"badge d-none\"\r\n                          }\r\n                        >\r\n                          Off\r\n                        </span>\r\n                        <span\r\n                          className={\r\n                            IsSwitch[index] === false && !Button.NotConnected\r\n                              ? \"badge\"\r\n                              : \"badge d-none\"\r\n                          }\r\n                        >\r\n                          On\r\n                        </span>\r\n                      </Link>\r\n                      <span\r\n                        className={\r\n                          Button.NotConnected\r\n                            ? \"ng-star-inserted \"\r\n                            : \"ng-star-inserted d-none\"\r\n                        }\r\n                      >\r\n                        Not Connected\r\n                      </span>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSwitchBordCard.propTypes = {};\r\n\r\nconst mapStateToProps = ({ ioTReducer }) => ({\r\n  isSecuritySystem: ioTReducer.isSecuritySystem,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  onPressSwitchBordButton,\r\n})(SwitchBordCard);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}