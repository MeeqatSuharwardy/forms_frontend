{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFArray from \"../objects/PDFArray\";\nimport PDFDict from \"../objects/PDFDict\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFStream from \"../objects/PDFStream\";\nvar PDFPageLeaf = /** @class */function (_super) {\n  __extends(PDFPageLeaf, _super);\n  function PDFPageLeaf(map, context, autoNormalizeCTM) {\n    if (autoNormalizeCTM === void 0) {\n      autoNormalizeCTM = true;\n    }\n    var _this = _super.call(this, map, context) || this;\n    _this.normalized = false;\n    _this.autoNormalizeCTM = autoNormalizeCTM;\n    return _this;\n  }\n  PDFPageLeaf.prototype.clone = function (context) {\n    var clone = PDFPageLeaf.fromMapWithContext(new Map(), context || this.context, this.autoNormalizeCTM);\n    var entries = this.entries();\n    for (var idx = 0, len = entries.length; idx < len; idx++) {\n      var _a = entries[idx],\n        key = _a[0],\n        value = _a[1];\n      clone.set(key, value);\n    }\n    return clone;\n  };\n  PDFPageLeaf.prototype.Parent = function () {\n    return this.lookupMaybe(PDFName.Parent, PDFDict);\n  };\n  PDFPageLeaf.prototype.Contents = function () {\n    return this.lookup(PDFName.of('Contents'));\n  };\n  PDFPageLeaf.prototype.Annots = function () {\n    return this.lookupMaybe(PDFName.Annots, PDFArray);\n  };\n  PDFPageLeaf.prototype.BleedBox = function () {\n    return this.lookupMaybe(PDFName.BleedBox, PDFArray);\n  };\n  PDFPageLeaf.prototype.TrimBox = function () {\n    return this.lookupMaybe(PDFName.TrimBox, PDFArray);\n  };\n  PDFPageLeaf.prototype.ArtBox = function () {\n    return this.lookupMaybe(PDFName.ArtBox, PDFArray);\n  };\n  PDFPageLeaf.prototype.Resources = function () {\n    var dictOrRef = this.getInheritableAttribute(PDFName.Resources);\n    return this.context.lookupMaybe(dictOrRef, PDFDict);\n  };\n  PDFPageLeaf.prototype.MediaBox = function () {\n    var arrayOrRef = this.getInheritableAttribute(PDFName.MediaBox);\n    return this.context.lookup(arrayOrRef, PDFArray);\n  };\n  PDFPageLeaf.prototype.CropBox = function () {\n    var arrayOrRef = this.getInheritableAttribute(PDFName.CropBox);\n    return this.context.lookupMaybe(arrayOrRef, PDFArray);\n  };\n  PDFPageLeaf.prototype.Rotate = function () {\n    var numberOrRef = this.getInheritableAttribute(PDFName.Rotate);\n    return this.context.lookupMaybe(numberOrRef, PDFNumber);\n  };\n  PDFPageLeaf.prototype.getInheritableAttribute = function (name) {\n    var attribute;\n    this.ascend(function (node) {\n      if (!attribute) attribute = node.get(name);\n    });\n    return attribute;\n  };\n  PDFPageLeaf.prototype.setParent = function (parentRef) {\n    this.set(PDFName.Parent, parentRef);\n  };\n  PDFPageLeaf.prototype.addContentStream = function (contentStreamRef) {\n    var Contents = this.normalizedEntries().Contents || this.context.obj([]);\n    this.set(PDFName.Contents, Contents);\n    Contents.push(contentStreamRef);\n  };\n  PDFPageLeaf.prototype.wrapContentStreams = function (startStream, endStream) {\n    var Contents = this.Contents();\n    if (Contents instanceof PDFArray) {\n      Contents.insert(0, startStream);\n      Contents.push(endStream);\n      return true;\n    }\n    return false;\n  };\n  PDFPageLeaf.prototype.addAnnot = function (annotRef) {\n    var Annots = this.normalizedEntries().Annots;\n    Annots.push(annotRef);\n  };\n  PDFPageLeaf.prototype.removeAnnot = function (annotRef) {\n    var Annots = this.normalizedEntries().Annots;\n    var index = Annots.indexOf(annotRef);\n    if (index !== undefined) {\n      Annots.remove(index);\n    }\n  };\n  PDFPageLeaf.prototype.setFontDictionary = function (name, fontDictRef) {\n    var Font = this.normalizedEntries().Font;\n    Font.set(name, fontDictRef);\n  };\n  PDFPageLeaf.prototype.newFontDictionaryKey = function (tag) {\n    var Font = this.normalizedEntries().Font;\n    return Font.uniqueKey(tag);\n  };\n  PDFPageLeaf.prototype.newFontDictionary = function (tag, fontDictRef) {\n    var key = this.newFontDictionaryKey(tag);\n    this.setFontDictionary(key, fontDictRef);\n    return key;\n  };\n  PDFPageLeaf.prototype.setXObject = function (name, xObjectRef) {\n    var XObject = this.normalizedEntries().XObject;\n    XObject.set(name, xObjectRef);\n  };\n  PDFPageLeaf.prototype.newXObjectKey = function (tag) {\n    var XObject = this.normalizedEntries().XObject;\n    return XObject.uniqueKey(tag);\n  };\n  PDFPageLeaf.prototype.newXObject = function (tag, xObjectRef) {\n    var key = this.newXObjectKey(tag);\n    this.setXObject(key, xObjectRef);\n    return key;\n  };\n  PDFPageLeaf.prototype.setExtGState = function (name, extGStateRef) {\n    var ExtGState = this.normalizedEntries().ExtGState;\n    ExtGState.set(name, extGStateRef);\n  };\n  PDFPageLeaf.prototype.newExtGStateKey = function (tag) {\n    var ExtGState = this.normalizedEntries().ExtGState;\n    return ExtGState.uniqueKey(tag);\n  };\n  PDFPageLeaf.prototype.newExtGState = function (tag, extGStateRef) {\n    var key = this.newExtGStateKey(tag);\n    this.setExtGState(key, extGStateRef);\n    return key;\n  };\n  PDFPageLeaf.prototype.ascend = function (visitor) {\n    visitor(this);\n    var Parent = this.Parent();\n    if (Parent) Parent.ascend(visitor);\n  };\n  PDFPageLeaf.prototype.normalize = function () {\n    if (this.normalized) return;\n    var context = this.context;\n    var contentsRef = this.get(PDFName.Contents);\n    var contents = this.context.lookup(contentsRef);\n    if (contents instanceof PDFStream) {\n      this.set(PDFName.Contents, context.obj([contentsRef]));\n    }\n    if (this.autoNormalizeCTM) {\n      this.wrapContentStreams(this.context.getPushGraphicsStateContentStream(), this.context.getPopGraphicsStateContentStream());\n    }\n    // TODO: Clone `Resources` if it is inherited\n    var dictOrRef = this.getInheritableAttribute(PDFName.Resources);\n    var Resources = context.lookupMaybe(dictOrRef, PDFDict) || context.obj({});\n    this.set(PDFName.Resources, Resources);\n    // TODO: Clone `Font` if it is inherited\n    var Font = Resources.lookupMaybe(PDFName.Font, PDFDict) || context.obj({});\n    Resources.set(PDFName.Font, Font);\n    // TODO: Clone `XObject` if it is inherited\n    var XObject = Resources.lookupMaybe(PDFName.XObject, PDFDict) || context.obj({});\n    Resources.set(PDFName.XObject, XObject);\n    // TODO: Clone `ExtGState` if it is inherited\n    var ExtGState = Resources.lookupMaybe(PDFName.ExtGState, PDFDict) || context.obj({});\n    Resources.set(PDFName.ExtGState, ExtGState);\n    var Annots = this.Annots() || context.obj([]);\n    this.set(PDFName.Annots, Annots);\n    this.normalized = true;\n  };\n  PDFPageLeaf.prototype.normalizedEntries = function () {\n    this.normalize();\n    var Annots = this.Annots();\n    var Resources = this.Resources();\n    var Contents = this.Contents();\n    return {\n      Annots: Annots,\n      Resources: Resources,\n      Contents: Contents,\n      Font: Resources.lookup(PDFName.Font, PDFDict),\n      XObject: Resources.lookup(PDFName.XObject, PDFDict),\n      ExtGState: Resources.lookup(PDFName.ExtGState, PDFDict)\n    };\n  };\n  PDFPageLeaf.InheritableEntries = ['Resources', 'MediaBox', 'CropBox', 'Rotate'];\n  PDFPageLeaf.withContextAndParent = function (context, parent) {\n    var dict = new Map();\n    dict.set(PDFName.Type, PDFName.Page);\n    dict.set(PDFName.Parent, parent);\n    dict.set(PDFName.Resources, context.obj({}));\n    dict.set(PDFName.MediaBox, context.obj([0, 0, 612, 792]));\n    return new PDFPageLeaf(dict, context, false);\n  };\n  PDFPageLeaf.fromMapWithContext = function (map, context, autoNormalizeCTM) {\n    if (autoNormalizeCTM === void 0) {\n      autoNormalizeCTM = true;\n    }\n    return new PDFPageLeaf(map, context, autoNormalizeCTM);\n  };\n  return PDFPageLeaf;\n}(PDFDict);\nexport default PDFPageLeaf;","map":{"version":3,"sources":["../../../src/core/structures/PDFPageLeaf.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport PDFArray from \"../objects/PDFArray\";\nimport PDFDict from \"../objects/PDFDict\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFStream from \"../objects/PDFStream\";\nvar PDFPageLeaf = /** @class */ (function (_super) {\n    __extends(PDFPageLeaf, _super);\n    function PDFPageLeaf(map, context, autoNormalizeCTM) {\n        if (autoNormalizeCTM === void 0) { autoNormalizeCTM = true; }\n        var _this = _super.call(this, map, context) || this;\n        _this.normalized = false;\n        _this.autoNormalizeCTM = autoNormalizeCTM;\n        return _this;\n    }\n    PDFPageLeaf.prototype.clone = function (context) {\n        var clone = PDFPageLeaf.fromMapWithContext(new Map(), context || this.context, this.autoNormalizeCTM);\n        var entries = this.entries();\n        for (var idx = 0, len = entries.length; idx < len; idx++) {\n            var _a = entries[idx], key = _a[0], value = _a[1];\n            clone.set(key, value);\n        }\n        return clone;\n    };\n    PDFPageLeaf.prototype.Parent = function () {\n        return this.lookupMaybe(PDFName.Parent, PDFDict);\n    };\n    PDFPageLeaf.prototype.Contents = function () {\n        return this.lookup(PDFName.of('Contents'));\n    };\n    PDFPageLeaf.prototype.Annots = function () {\n        return this.lookupMaybe(PDFName.Annots, PDFArray);\n    };\n    PDFPageLeaf.prototype.BleedBox = function () {\n        return this.lookupMaybe(PDFName.BleedBox, PDFArray);\n    };\n    PDFPageLeaf.prototype.TrimBox = function () {\n        return this.lookupMaybe(PDFName.TrimBox, PDFArray);\n    };\n    PDFPageLeaf.prototype.ArtBox = function () {\n        return this.lookupMaybe(PDFName.ArtBox, PDFArray);\n    };\n    PDFPageLeaf.prototype.Resources = function () {\n        var dictOrRef = this.getInheritableAttribute(PDFName.Resources);\n        return this.context.lookupMaybe(dictOrRef, PDFDict);\n    };\n    PDFPageLeaf.prototype.MediaBox = function () {\n        var arrayOrRef = this.getInheritableAttribute(PDFName.MediaBox);\n        return this.context.lookup(arrayOrRef, PDFArray);\n    };\n    PDFPageLeaf.prototype.CropBox = function () {\n        var arrayOrRef = this.getInheritableAttribute(PDFName.CropBox);\n        return this.context.lookupMaybe(arrayOrRef, PDFArray);\n    };\n    PDFPageLeaf.prototype.Rotate = function () {\n        var numberOrRef = this.getInheritableAttribute(PDFName.Rotate);\n        return this.context.lookupMaybe(numberOrRef, PDFNumber);\n    };\n    PDFPageLeaf.prototype.getInheritableAttribute = function (name) {\n        var attribute;\n        this.ascend(function (node) {\n            if (!attribute)\n                attribute = node.get(name);\n        });\n        return attribute;\n    };\n    PDFPageLeaf.prototype.setParent = function (parentRef) {\n        this.set(PDFName.Parent, parentRef);\n    };\n    PDFPageLeaf.prototype.addContentStream = function (contentStreamRef) {\n        var Contents = this.normalizedEntries().Contents || this.context.obj([]);\n        this.set(PDFName.Contents, Contents);\n        Contents.push(contentStreamRef);\n    };\n    PDFPageLeaf.prototype.wrapContentStreams = function (startStream, endStream) {\n        var Contents = this.Contents();\n        if (Contents instanceof PDFArray) {\n            Contents.insert(0, startStream);\n            Contents.push(endStream);\n            return true;\n        }\n        return false;\n    };\n    PDFPageLeaf.prototype.addAnnot = function (annotRef) {\n        var Annots = this.normalizedEntries().Annots;\n        Annots.push(annotRef);\n    };\n    PDFPageLeaf.prototype.removeAnnot = function (annotRef) {\n        var Annots = this.normalizedEntries().Annots;\n        var index = Annots.indexOf(annotRef);\n        if (index !== undefined) {\n            Annots.remove(index);\n        }\n    };\n    PDFPageLeaf.prototype.setFontDictionary = function (name, fontDictRef) {\n        var Font = this.normalizedEntries().Font;\n        Font.set(name, fontDictRef);\n    };\n    PDFPageLeaf.prototype.newFontDictionaryKey = function (tag) {\n        var Font = this.normalizedEntries().Font;\n        return Font.uniqueKey(tag);\n    };\n    PDFPageLeaf.prototype.newFontDictionary = function (tag, fontDictRef) {\n        var key = this.newFontDictionaryKey(tag);\n        this.setFontDictionary(key, fontDictRef);\n        return key;\n    };\n    PDFPageLeaf.prototype.setXObject = function (name, xObjectRef) {\n        var XObject = this.normalizedEntries().XObject;\n        XObject.set(name, xObjectRef);\n    };\n    PDFPageLeaf.prototype.newXObjectKey = function (tag) {\n        var XObject = this.normalizedEntries().XObject;\n        return XObject.uniqueKey(tag);\n    };\n    PDFPageLeaf.prototype.newXObject = function (tag, xObjectRef) {\n        var key = this.newXObjectKey(tag);\n        this.setXObject(key, xObjectRef);\n        return key;\n    };\n    PDFPageLeaf.prototype.setExtGState = function (name, extGStateRef) {\n        var ExtGState = this.normalizedEntries().ExtGState;\n        ExtGState.set(name, extGStateRef);\n    };\n    PDFPageLeaf.prototype.newExtGStateKey = function (tag) {\n        var ExtGState = this.normalizedEntries().ExtGState;\n        return ExtGState.uniqueKey(tag);\n    };\n    PDFPageLeaf.prototype.newExtGState = function (tag, extGStateRef) {\n        var key = this.newExtGStateKey(tag);\n        this.setExtGState(key, extGStateRef);\n        return key;\n    };\n    PDFPageLeaf.prototype.ascend = function (visitor) {\n        visitor(this);\n        var Parent = this.Parent();\n        if (Parent)\n            Parent.ascend(visitor);\n    };\n    PDFPageLeaf.prototype.normalize = function () {\n        if (this.normalized)\n            return;\n        var context = this.context;\n        var contentsRef = this.get(PDFName.Contents);\n        var contents = this.context.lookup(contentsRef);\n        if (contents instanceof PDFStream) {\n            this.set(PDFName.Contents, context.obj([contentsRef]));\n        }\n        if (this.autoNormalizeCTM) {\n            this.wrapContentStreams(this.context.getPushGraphicsStateContentStream(), this.context.getPopGraphicsStateContentStream());\n        }\n        // TODO: Clone `Resources` if it is inherited\n        var dictOrRef = this.getInheritableAttribute(PDFName.Resources);\n        var Resources = context.lookupMaybe(dictOrRef, PDFDict) || context.obj({});\n        this.set(PDFName.Resources, Resources);\n        // TODO: Clone `Font` if it is inherited\n        var Font = Resources.lookupMaybe(PDFName.Font, PDFDict) || context.obj({});\n        Resources.set(PDFName.Font, Font);\n        // TODO: Clone `XObject` if it is inherited\n        var XObject = Resources.lookupMaybe(PDFName.XObject, PDFDict) || context.obj({});\n        Resources.set(PDFName.XObject, XObject);\n        // TODO: Clone `ExtGState` if it is inherited\n        var ExtGState = Resources.lookupMaybe(PDFName.ExtGState, PDFDict) || context.obj({});\n        Resources.set(PDFName.ExtGState, ExtGState);\n        var Annots = this.Annots() || context.obj([]);\n        this.set(PDFName.Annots, Annots);\n        this.normalized = true;\n    };\n    PDFPageLeaf.prototype.normalizedEntries = function () {\n        this.normalize();\n        var Annots = this.Annots();\n        var Resources = this.Resources();\n        var Contents = this.Contents();\n        return {\n            Annots: Annots,\n            Resources: Resources,\n            Contents: Contents,\n            Font: Resources.lookup(PDFName.Font, PDFDict),\n            XObject: Resources.lookup(PDFName.XObject, PDFDict),\n            ExtGState: Resources.lookup(PDFName.ExtGState, PDFDict),\n        };\n    };\n    PDFPageLeaf.InheritableEntries = [\n        'Resources',\n        'MediaBox',\n        'CropBox',\n        'Rotate',\n    ];\n    PDFPageLeaf.withContextAndParent = function (context, parent) {\n        var dict = new Map();\n        dict.set(PDFName.Type, PDFName.Page);\n        dict.set(PDFName.Parent, parent);\n        dict.set(PDFName.Resources, context.obj({}));\n        dict.set(PDFName.MediaBox, context.obj([0, 0, 612, 792]));\n        return new PDFPageLeaf(dict, context, false);\n    };\n    PDFPageLeaf.fromMapWithContext = function (map, context, autoNormalizeCTM) {\n        if (autoNormalizeCTM === void 0) { autoNormalizeCTM = true; }\n        return new PDFPageLeaf(map, context, autoNormalizeCTM);\n    };\n    return PDFPageLeaf;\n}(PDFDict));\nexport default PDFPageLeaf;\n//# sourceMappingURL=PDFPageLeaf.js.map"]},"metadata":{},"sourceType":"module"}