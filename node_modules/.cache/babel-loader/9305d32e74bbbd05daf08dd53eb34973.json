{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFDict from \"../objects/PDFDict\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFRef from \"../objects/PDFRef\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport BorderStyle from \"./BorderStyle\";\nimport PDFAnnotation from \"./PDFAnnotation\";\nimport AppearanceCharacteristics from \"./AppearanceCharacteristics\";\nvar PDFWidgetAnnotation = /** @class */function (_super) {\n  __extends(PDFWidgetAnnotation, _super);\n  function PDFWidgetAnnotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PDFWidgetAnnotation.prototype.MK = function () {\n    var MK = this.dict.lookup(PDFName.of('MK'));\n    if (MK instanceof PDFDict) return MK;\n    return undefined;\n  };\n  PDFWidgetAnnotation.prototype.BS = function () {\n    var BS = this.dict.lookup(PDFName.of('BS'));\n    if (BS instanceof PDFDict) return BS;\n    return undefined;\n  };\n  PDFWidgetAnnotation.prototype.DA = function () {\n    var da = this.dict.lookup(PDFName.of('DA'));\n    if (da instanceof PDFString || da instanceof PDFHexString) return da;\n    return undefined;\n  };\n  PDFWidgetAnnotation.prototype.P = function () {\n    var P = this.dict.get(PDFName.of('P'));\n    if (P instanceof PDFRef) return P;\n    return undefined;\n  };\n  PDFWidgetAnnotation.prototype.setP = function (page) {\n    this.dict.set(PDFName.of('P'), page);\n  };\n  PDFWidgetAnnotation.prototype.setDefaultAppearance = function (appearance) {\n    this.dict.set(PDFName.of('DA'), PDFString.of(appearance));\n  };\n  PDFWidgetAnnotation.prototype.getDefaultAppearance = function () {\n    var DA = this.DA();\n    if (DA instanceof PDFHexString) {\n      return DA.decodeText();\n    }\n    return DA === null || DA === void 0 ? void 0 : DA.asString();\n  };\n  PDFWidgetAnnotation.prototype.getAppearanceCharacteristics = function () {\n    var MK = this.MK();\n    if (MK) return AppearanceCharacteristics.fromDict(MK);\n    return undefined;\n  };\n  PDFWidgetAnnotation.prototype.getOrCreateAppearanceCharacteristics = function () {\n    var MK = this.MK();\n    if (MK) return AppearanceCharacteristics.fromDict(MK);\n    var ac = AppearanceCharacteristics.fromDict(this.dict.context.obj({}));\n    this.dict.set(PDFName.of('MK'), ac.dict);\n    return ac;\n  };\n  PDFWidgetAnnotation.prototype.getBorderStyle = function () {\n    var BS = this.BS();\n    if (BS) return BorderStyle.fromDict(BS);\n    return undefined;\n  };\n  PDFWidgetAnnotation.prototype.getOrCreateBorderStyle = function () {\n    var BS = this.BS();\n    if (BS) return BorderStyle.fromDict(BS);\n    var bs = BorderStyle.fromDict(this.dict.context.obj({}));\n    this.dict.set(PDFName.of('BS'), bs.dict);\n    return bs;\n  };\n  PDFWidgetAnnotation.prototype.getOnValue = function () {\n    var _a;\n    var normal = (_a = this.getAppearances()) === null || _a === void 0 ? void 0 : _a.normal;\n    if (normal instanceof PDFDict) {\n      var keys = normal.keys();\n      for (var idx = 0, len = keys.length; idx < len; idx++) {\n        var key = keys[idx];\n        if (key !== PDFName.of('Off')) return key;\n      }\n    }\n    return undefined;\n  };\n  PDFWidgetAnnotation.fromDict = function (dict) {\n    return new PDFWidgetAnnotation(dict);\n  };\n  PDFWidgetAnnotation.create = function (context, parent) {\n    var dict = context.obj({\n      Type: 'Annot',\n      Subtype: 'Widget',\n      Rect: [0, 0, 0, 0],\n      Parent: parent\n    });\n    return new PDFWidgetAnnotation(dict);\n  };\n  return PDFWidgetAnnotation;\n}(PDFAnnotation);\nexport default PDFWidgetAnnotation;","map":{"version":3,"sources":["../../../src/core/annotation/PDFWidgetAnnotation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport PDFDict from \"../objects/PDFDict\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFRef from \"../objects/PDFRef\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport BorderStyle from \"./BorderStyle\";\nimport PDFAnnotation from \"./PDFAnnotation\";\nimport AppearanceCharacteristics from \"./AppearanceCharacteristics\";\nvar PDFWidgetAnnotation = /** @class */ (function (_super) {\n    __extends(PDFWidgetAnnotation, _super);\n    function PDFWidgetAnnotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PDFWidgetAnnotation.prototype.MK = function () {\n        var MK = this.dict.lookup(PDFName.of('MK'));\n        if (MK instanceof PDFDict)\n            return MK;\n        return undefined;\n    };\n    PDFWidgetAnnotation.prototype.BS = function () {\n        var BS = this.dict.lookup(PDFName.of('BS'));\n        if (BS instanceof PDFDict)\n            return BS;\n        return undefined;\n    };\n    PDFWidgetAnnotation.prototype.DA = function () {\n        var da = this.dict.lookup(PDFName.of('DA'));\n        if (da instanceof PDFString || da instanceof PDFHexString)\n            return da;\n        return undefined;\n    };\n    PDFWidgetAnnotation.prototype.P = function () {\n        var P = this.dict.get(PDFName.of('P'));\n        if (P instanceof PDFRef)\n            return P;\n        return undefined;\n    };\n    PDFWidgetAnnotation.prototype.setP = function (page) {\n        this.dict.set(PDFName.of('P'), page);\n    };\n    PDFWidgetAnnotation.prototype.setDefaultAppearance = function (appearance) {\n        this.dict.set(PDFName.of('DA'), PDFString.of(appearance));\n    };\n    PDFWidgetAnnotation.prototype.getDefaultAppearance = function () {\n        var DA = this.DA();\n        if (DA instanceof PDFHexString) {\n            return DA.decodeText();\n        }\n        return DA === null || DA === void 0 ? void 0 : DA.asString();\n    };\n    PDFWidgetAnnotation.prototype.getAppearanceCharacteristics = function () {\n        var MK = this.MK();\n        if (MK)\n            return AppearanceCharacteristics.fromDict(MK);\n        return undefined;\n    };\n    PDFWidgetAnnotation.prototype.getOrCreateAppearanceCharacteristics = function () {\n        var MK = this.MK();\n        if (MK)\n            return AppearanceCharacteristics.fromDict(MK);\n        var ac = AppearanceCharacteristics.fromDict(this.dict.context.obj({}));\n        this.dict.set(PDFName.of('MK'), ac.dict);\n        return ac;\n    };\n    PDFWidgetAnnotation.prototype.getBorderStyle = function () {\n        var BS = this.BS();\n        if (BS)\n            return BorderStyle.fromDict(BS);\n        return undefined;\n    };\n    PDFWidgetAnnotation.prototype.getOrCreateBorderStyle = function () {\n        var BS = this.BS();\n        if (BS)\n            return BorderStyle.fromDict(BS);\n        var bs = BorderStyle.fromDict(this.dict.context.obj({}));\n        this.dict.set(PDFName.of('BS'), bs.dict);\n        return bs;\n    };\n    PDFWidgetAnnotation.prototype.getOnValue = function () {\n        var _a;\n        var normal = (_a = this.getAppearances()) === null || _a === void 0 ? void 0 : _a.normal;\n        if (normal instanceof PDFDict) {\n            var keys = normal.keys();\n            for (var idx = 0, len = keys.length; idx < len; idx++) {\n                var key = keys[idx];\n                if (key !== PDFName.of('Off'))\n                    return key;\n            }\n        }\n        return undefined;\n    };\n    PDFWidgetAnnotation.fromDict = function (dict) {\n        return new PDFWidgetAnnotation(dict);\n    };\n    PDFWidgetAnnotation.create = function (context, parent) {\n        var dict = context.obj({\n            Type: 'Annot',\n            Subtype: 'Widget',\n            Rect: [0, 0, 0, 0],\n            Parent: parent,\n        });\n        return new PDFWidgetAnnotation(dict);\n    };\n    return PDFWidgetAnnotation;\n}(PDFAnnotation));\nexport default PDFWidgetAnnotation;\n//# sourceMappingURL=PDFWidgetAnnotation.js.map"]},"metadata":{},"sourceType":"module"}