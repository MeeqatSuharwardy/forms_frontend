{"ast":null,"code":"import CharCodes from \"./CharCodes\";\nexport var IsDigit = new Uint8Array(256);\nIsDigit[CharCodes.Zero] = 1;\nIsDigit[CharCodes.One] = 1;\nIsDigit[CharCodes.Two] = 1;\nIsDigit[CharCodes.Three] = 1;\nIsDigit[CharCodes.Four] = 1;\nIsDigit[CharCodes.Five] = 1;\nIsDigit[CharCodes.Six] = 1;\nIsDigit[CharCodes.Seven] = 1;\nIsDigit[CharCodes.Eight] = 1;\nIsDigit[CharCodes.Nine] = 1;\nexport var IsNumericPrefix = new Uint8Array(256);\nIsNumericPrefix[CharCodes.Period] = 1;\nIsNumericPrefix[CharCodes.Plus] = 1;\nIsNumericPrefix[CharCodes.Minus] = 1;\nexport var IsNumeric = new Uint8Array(256);\nfor (var idx = 0, len = 256; idx < len; idx++) {\n  IsNumeric[idx] = IsDigit[idx] || IsNumericPrefix[idx] ? 1 : 0;\n}","map":{"version":3,"sources":["../../../src/core/syntax/Numeric.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAA,aAAA;AAEhB,OAAO,IAAM,OAAO,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC;AAE1C,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;AAC3B,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC;AAC1B,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC;AAC1B,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;AAC5B,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;AAC3B,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;AAC3B,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC;AAC1B,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;AAC5B,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;AAC5B,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;AAE3B,OAAO,IAAM,eAAe,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC;AAElD,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC;AACrC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;AACnC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;AAEpC,OAAO,IAAM,SAAS,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC;AAE5C,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE;EAC7C,SAAS,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AAC9D","sourceRoot":"","sourcesContent":["import CharCodes from \"./CharCodes\";\nexport var IsDigit = new Uint8Array(256);\nIsDigit[CharCodes.Zero] = 1;\nIsDigit[CharCodes.One] = 1;\nIsDigit[CharCodes.Two] = 1;\nIsDigit[CharCodes.Three] = 1;\nIsDigit[CharCodes.Four] = 1;\nIsDigit[CharCodes.Five] = 1;\nIsDigit[CharCodes.Six] = 1;\nIsDigit[CharCodes.Seven] = 1;\nIsDigit[CharCodes.Eight] = 1;\nIsDigit[CharCodes.Nine] = 1;\nexport var IsNumericPrefix = new Uint8Array(256);\nIsNumericPrefix[CharCodes.Period] = 1;\nIsNumericPrefix[CharCodes.Plus] = 1;\nIsNumericPrefix[CharCodes.Minus] = 1;\nexport var IsNumeric = new Uint8Array(256);\nfor (var idx = 0, len = 256; idx < len; idx++) {\n    IsNumeric[idx] = IsDigit[idx] || IsNumericPrefix[idx] ? 1 : 0;\n}\n//# sourceMappingURL=Numeric.js.map"]},"metadata":{},"sourceType":"module"}