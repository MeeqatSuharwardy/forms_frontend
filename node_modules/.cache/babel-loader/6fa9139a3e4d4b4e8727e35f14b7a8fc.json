{"ast":null,"code":"import { __extends, __spreadArrays } from \"tslib\";\nimport PDFNumber from \"./PDFNumber\";\nimport PDFObject from \"./PDFObject\";\nimport CharCodes from \"../syntax/CharCodes\";\nimport { PDFArrayIsNotRectangleError } from \"../errors\";\nvar PDFArray = /** @class */function (_super) {\n  __extends(PDFArray, _super);\n  function PDFArray(context) {\n    var _this = _super.call(this) || this;\n    _this.array = [];\n    _this.context = context;\n    return _this;\n  }\n  PDFArray.prototype.size = function () {\n    return this.array.length;\n  };\n  PDFArray.prototype.push = function (object) {\n    this.array.push(object);\n  };\n  PDFArray.prototype.insert = function (index, object) {\n    this.array.splice(index, 0, object);\n  };\n  PDFArray.prototype.indexOf = function (object) {\n    var index = this.array.indexOf(object);\n    return index === -1 ? undefined : index;\n  };\n  PDFArray.prototype.remove = function (index) {\n    this.array.splice(index, 1);\n  };\n  PDFArray.prototype.set = function (idx, object) {\n    this.array[idx] = object;\n  };\n  PDFArray.prototype.get = function (index) {\n    return this.array[index];\n  };\n  PDFArray.prototype.lookupMaybe = function (index) {\n    var _a;\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      types[_i - 1] = arguments[_i];\n    }\n    return (_a = this.context).lookupMaybe.apply(_a, __spreadArrays([this.get(index)], types));\n  };\n  PDFArray.prototype.lookup = function (index) {\n    var _a;\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      types[_i - 1] = arguments[_i];\n    }\n    return (_a = this.context).lookup.apply(_a, __spreadArrays([this.get(index)], types));\n  };\n  PDFArray.prototype.asRectangle = function () {\n    if (this.size() !== 4) throw new PDFArrayIsNotRectangleError(this.size());\n    var lowerLeftX = this.lookup(0, PDFNumber).asNumber();\n    var lowerLeftY = this.lookup(1, PDFNumber).asNumber();\n    var upperRightX = this.lookup(2, PDFNumber).asNumber();\n    var upperRightY = this.lookup(3, PDFNumber).asNumber();\n    var x = lowerLeftX;\n    var y = lowerLeftY;\n    var width = upperRightX - lowerLeftX;\n    var height = upperRightY - lowerLeftY;\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  };\n  PDFArray.prototype.asArray = function () {\n    return this.array.slice();\n  };\n  PDFArray.prototype.clone = function (context) {\n    var clone = PDFArray.withContext(context || this.context);\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      clone.push(this.array[idx]);\n    }\n    return clone;\n  };\n  PDFArray.prototype.toString = function () {\n    var arrayString = '[ ';\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      arrayString += this.get(idx).toString();\n      arrayString += ' ';\n    }\n    arrayString += ']';\n    return arrayString;\n  };\n  PDFArray.prototype.sizeInBytes = function () {\n    var size = 3;\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      size += this.get(idx).sizeInBytes() + 1;\n    }\n    return size;\n  };\n  PDFArray.prototype.copyBytesInto = function (buffer, offset) {\n    var initialOffset = offset;\n    buffer[offset++] = CharCodes.LeftSquareBracket;\n    buffer[offset++] = CharCodes.Space;\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      offset += this.get(idx).copyBytesInto(buffer, offset);\n      buffer[offset++] = CharCodes.Space;\n    }\n    buffer[offset++] = CharCodes.RightSquareBracket;\n    return offset - initialOffset;\n  };\n  PDFArray.prototype.scalePDFNumbers = function (x, y) {\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      var el = this.lookup(idx);\n      if (el instanceof PDFNumber) {\n        var factor = idx % 2 === 0 ? x : y;\n        this.set(idx, PDFNumber.of(el.asNumber() * factor));\n      }\n    }\n  };\n  PDFArray.withContext = function (context) {\n    return new PDFArray(context);\n  };\n  return PDFArray;\n}(PDFObject);\nexport default PDFArray;","map":{"version":3,"sources":["../../../src/core/objects/PDFArray.ts"],"names":[],"mappings":";AAKA,OAAO,SAAS,MAAA,aAAA;AAChB,OAAO,SAAS,MAAA,aAAA;AAKhB,OAAO,SAAS,MAAA,qBAAA;AAChB,SAAS,2BAA2B,QAAE,WAAA;AAGtC,IAAA,QAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAuB,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;EAMrB,SAAA,QAAA,CAAoB,OAAmB,EAAA;IAAvC,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,CAAO,IAAA,IAAA;IACP,KAAI,CAAC,KAAK,GAAG,EAAE;IACf,KAAI,CAAC,OAAO,GAAG,OAAO;;EACxB;EAEA,QAAA,CAAA,SAAA,CAAA,IAAI,GAAJ,YAAA;IACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;EAC1B,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,IAAI,GAAJ,UAAK,MAAiB,EAAA;IACpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;EACzB,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,MAAM,GAAN,UAAO,KAAa,EAAE,MAAiB,EAAA;IACrC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC;EACrC,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,OAAO,GAAP,UAAQ,MAAiB,EAAA;IACvB,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;IACxC,OAAO,KAAK,KAAK,CAAC,CAAC,GAAG,SAAS,GAAG,KAAK;EACzC,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,MAAM,GAAN,UAAO,KAAa,EAAA;IAClB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;EAC7B,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,GAAG,GAAH,UAAI,GAAW,EAAE,MAAiB,EAAA;IAChC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM;EAC1B,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,GAAG,GAAH,UAAI,KAAa,EAAA;IACf,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;EAC1B,CAAC;EAyBD,QAAA,CAAA,SAAA,CAAA,WAAW,GAAX,UAAY,KAAa,EAAA;;IAAE,IAAA,KAAA,GAAA,EAAA;SAAA,IAAA,EAAA,GAAA,CAAe,EAAf,EAAA,GAAA,SAAA,CAAA,MAAe,EAAf,EAAA,EAAe,EAAA;MAAf,KAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;IACzB,OAAO,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,EAAC,WAAW,CAAA,KAAA,CAAA,EAAA,EAAA,cAAA,CAAA,CAC7B,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA,EAEZ,KAAK,CAAA,CACF;EACV,CAAC;EAoBD,QAAA,CAAA,SAAA,CAAA,MAAM,GAAN,UAAO,KAAa,EAAA;;IAAE,IAAA,KAAA,GAAA,EAAA;SAAA,IAAA,EAAA,GAAA,CAAe,EAAf,EAAA,GAAA,SAAA,CAAA,MAAe,EAAf,EAAA,EAAe,EAAA;MAAf,KAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;IACpB,OAAO,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,EAAC,MAAM,CAAA,KAAA,CAAA,EAAA,EAAA,cAAA,CAAA,CACxB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA,EAEZ,KAAK,CAAA,CACF;EACV,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACE,IAAI,IAAI,CAAC,IAAI,CAAA,CAAE,KAAK,CAAC,EAAE,MAAM,IAAI,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAA,CAAE,CAAC;IAEzE,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAA,CAAE;IACvD,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAA,CAAE;IACvD,IAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAA,CAAE;IACxD,IAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAA,CAAE;IAExD,IAAM,CAAC,GAAG,UAAU;IACpB,IAAM,CAAC,GAAG,UAAU;IACpB,IAAM,KAAK,GAAG,WAAW,GAAG,UAAU;IACtC,IAAM,MAAM,GAAG,WAAW,GAAG,UAAU;IAEvC,OAAO;MAAE,CAAC,EAAA,CAAA;MAAE,CAAC,EAAA,CAAA;MAAE,KAAK,EAAA,KAAA;MAAE,MAAM,EAAA;IAAA,CAAE;EAChC,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,OAAO,GAAP,YAAA;IACE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAA,CAAE;EAC3B,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,KAAK,GAAL,UAAM,OAAoB,EAAA;IACxB,IAAM,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC;IAC3D,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,CAAA,CAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE;MACrD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC5B;IACD,OAAO,KAAK;EACd,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;IACE,IAAI,WAAW,GAAG,IAAI;IACtB,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,CAAA,CAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE;MACrD,WAAW,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAA,CAAE;MACvC,WAAW,IAAI,GAAG;IACnB;IACD,WAAW,IAAI,GAAG;IAClB,OAAO,WAAW;EACpB,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACE,IAAI,IAAI,GAAG,CAAC;IACZ,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,CAAA,CAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE;MACrD,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,WAAW,CAAA,CAAE,GAAG,CAAC;IACxC;IACD,OAAO,IAAI;EACb,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UAAc,MAAkB,EAAE,MAAc,EAAA;IAC9C,IAAM,aAAa,GAAG,MAAM;IAE5B,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,iBAAiB;IAC9C,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,KAAK;IAClC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,CAAA,CAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE;MACrD,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC;MACrD,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,KAAK;IACnC;IACD,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,kBAAkB;IAE/C,OAAO,MAAM,GAAG,aAAa;EAC/B,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,eAAe,GAAf,UAAgB,CAAS,EAAE,CAAS,EAAA;IAClC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,CAAA,CAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE;MACrD,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;MAC3B,IAAI,EAAE,YAAY,SAAS,EAAE;QAC3B,IAAM,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;QACpC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAA,CAAE,GAAG,MAAM,CAAC,CAAC;MACpD;IACF;EACH,CAAC;EArKM,QAAA,CAAA,WAAW,GAAG,UAAC,OAAmB,EAAA;IAAK,OAAA,IAAI,QAAQ,CAAC,OAAO,CAAC;EAArB,CAAqB;EAsKrE,OAAA,QAAC;CAAA,CAvKsB,SAAS,CAAA;AAyKhC,eAAe,QAAQ","sourceRoot":"","sourcesContent":["import { __extends, __spreadArrays } from \"tslib\";\nimport PDFNumber from \"./PDFNumber\";\nimport PDFObject from \"./PDFObject\";\nimport CharCodes from \"../syntax/CharCodes\";\nimport { PDFArrayIsNotRectangleError } from \"../errors\";\nvar PDFArray = /** @class */ (function (_super) {\n    __extends(PDFArray, _super);\n    function PDFArray(context) {\n        var _this = _super.call(this) || this;\n        _this.array = [];\n        _this.context = context;\n        return _this;\n    }\n    PDFArray.prototype.size = function () {\n        return this.array.length;\n    };\n    PDFArray.prototype.push = function (object) {\n        this.array.push(object);\n    };\n    PDFArray.prototype.insert = function (index, object) {\n        this.array.splice(index, 0, object);\n    };\n    PDFArray.prototype.indexOf = function (object) {\n        var index = this.array.indexOf(object);\n        return index === -1 ? undefined : index;\n    };\n    PDFArray.prototype.remove = function (index) {\n        this.array.splice(index, 1);\n    };\n    PDFArray.prototype.set = function (idx, object) {\n        this.array[idx] = object;\n    };\n    PDFArray.prototype.get = function (index) {\n        return this.array[index];\n    };\n    PDFArray.prototype.lookupMaybe = function (index) {\n        var _a;\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        return (_a = this.context).lookupMaybe.apply(_a, __spreadArrays([this.get(index)], types));\n    };\n    PDFArray.prototype.lookup = function (index) {\n        var _a;\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        return (_a = this.context).lookup.apply(_a, __spreadArrays([this.get(index)], types));\n    };\n    PDFArray.prototype.asRectangle = function () {\n        if (this.size() !== 4)\n            throw new PDFArrayIsNotRectangleError(this.size());\n        var lowerLeftX = this.lookup(0, PDFNumber).asNumber();\n        var lowerLeftY = this.lookup(1, PDFNumber).asNumber();\n        var upperRightX = this.lookup(2, PDFNumber).asNumber();\n        var upperRightY = this.lookup(3, PDFNumber).asNumber();\n        var x = lowerLeftX;\n        var y = lowerLeftY;\n        var width = upperRightX - lowerLeftX;\n        var height = upperRightY - lowerLeftY;\n        return { x: x, y: y, width: width, height: height };\n    };\n    PDFArray.prototype.asArray = function () {\n        return this.array.slice();\n    };\n    PDFArray.prototype.clone = function (context) {\n        var clone = PDFArray.withContext(context || this.context);\n        for (var idx = 0, len = this.size(); idx < len; idx++) {\n            clone.push(this.array[idx]);\n        }\n        return clone;\n    };\n    PDFArray.prototype.toString = function () {\n        var arrayString = '[ ';\n        for (var idx = 0, len = this.size(); idx < len; idx++) {\n            arrayString += this.get(idx).toString();\n            arrayString += ' ';\n        }\n        arrayString += ']';\n        return arrayString;\n    };\n    PDFArray.prototype.sizeInBytes = function () {\n        var size = 3;\n        for (var idx = 0, len = this.size(); idx < len; idx++) {\n            size += this.get(idx).sizeInBytes() + 1;\n        }\n        return size;\n    };\n    PDFArray.prototype.copyBytesInto = function (buffer, offset) {\n        var initialOffset = offset;\n        buffer[offset++] = CharCodes.LeftSquareBracket;\n        buffer[offset++] = CharCodes.Space;\n        for (var idx = 0, len = this.size(); idx < len; idx++) {\n            offset += this.get(idx).copyBytesInto(buffer, offset);\n            buffer[offset++] = CharCodes.Space;\n        }\n        buffer[offset++] = CharCodes.RightSquareBracket;\n        return offset - initialOffset;\n    };\n    PDFArray.prototype.scalePDFNumbers = function (x, y) {\n        for (var idx = 0, len = this.size(); idx < len; idx++) {\n            var el = this.lookup(idx);\n            if (el instanceof PDFNumber) {\n                var factor = idx % 2 === 0 ? x : y;\n                this.set(idx, PDFNumber.of(el.asNumber() * factor));\n            }\n        }\n    };\n    PDFArray.withContext = function (context) { return new PDFArray(context); };\n    return PDFArray;\n}(PDFObject));\nexport default PDFArray;\n//# sourceMappingURL=PDFArray.js.map"]},"metadata":{},"sourceType":"module"}