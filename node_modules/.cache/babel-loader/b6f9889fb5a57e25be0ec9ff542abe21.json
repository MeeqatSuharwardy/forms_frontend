{"ast":null,"code":"var _jsxFileName = \"/Users/meeqatsuharwardy/forms_frontend/src/components/Forms/new_forms/I9/i9.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { PDFDocument } from \"pdf-lib\";\nimport I9 from \"../../../../assets/files/i-9.pdf\";\nexport default function PDFViewer() {\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const [pdfBytes, setPdfBytes] = useState(null); // Store the PDF bytes for submission\n\n  useEffect(() => {\n    fetch(I9).then(response => {\n      if (response.ok) return response.blob();\n      throw new Error(\"Failed to load the initial PDF\");\n    }).then(blob => {\n      const url = URL.createObjectURL(blob);\n      setPdfUrl(url);\n    }).catch(error => console.error(\"Error loading PDF:\", error));\n  }, []);\n  const onFileChange = async event => {\n    const uploadedFile = event.target.files[0];\n    if (uploadedFile) {\n      const pdfDoc = await PDFDocument.load(await uploadedFile.arrayBuffer());\n      console.log(\"Original PDF loaded\");\n\n      // Simulate an editing operation\n      // For example, add a text to the first page (you must adjust according to your PDF structure)\n      const pages = pdfDoc.getPages();\n      const firstPage = pages[0];\n      const {\n        width,\n        height\n      } = firstPage.getSize();\n      firstPage.drawText(\"Hello, this is a test edit!\", {\n        x: 50,\n        y: height - 100,\n        size: 25\n      });\n      console.log(\"PDF edited\");\n      const pdfBytes = await pdfDoc.save();\n      console.log(\"PDF saved to bytes\", pdfBytes.slice(0, 100)); // Log first 100 bytes to confirm\n\n      const blob = new Blob([pdfBytes], {\n        type: \"application/pdf\"\n      });\n      const url = URL.createObjectURL(blob);\n      setPdfUrl(url);\n      setPdfBytes(pdfBytes); // Save the PDF bytes for later submission\n      console.log(\"PDF URL set for display\");\n    }\n  };\n  const onFormSubmit = event => {\n    event.preventDefault();\n    if (!pdfBytes) {\n      console.error(\"No PDF bytes available for submission.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"full_name\", event.target.full_name.value);\n    formData.append(\"date_of_birth\", event.target.date_of_birth.value);\n    formData.append(\"submitted_year\", new Date().getFullYear());\n    formData.append(\"pdf_file\", new Blob([pdfBytes], {\n      type: \"application/pdf\"\n    }), \"edited.pdf\");\n    console.log(\"Submitting form\");\n    fetch(\"http://127.0.0.1:8000/upload_pdf/\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(data => {\n      console.log(\"Submission response:\", data);\n      alert(\"PDF submitted successfully!\");\n    }).catch(error => {\n      console.error(\"Error submitting PDF:\", error);\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: onFileChange,\n    accept: \"application/pdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), pdfUrl ? /*#__PURE__*/React.createElement(\"iframe\", {\n    src: pdfUrl,\n    style: {\n      width: \"100%\",\n      height: \"500px\",\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Loading PDF...\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onFormSubmit,\n    enctype: \"multipart/form-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"full_name\",\n    placeholder: \"Full Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"date_of_birth\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Save PDF\")));\n}","map":{"version":3,"names":["React","useState","useEffect","PDFDocument","I9","PDFViewer","pdfUrl","setPdfUrl","pdfBytes","setPdfBytes","fetch","then","response","ok","blob","Error","url","URL","createObjectURL","catch","error","console","onFileChange","event","uploadedFile","target","files","pdfDoc","load","arrayBuffer","log","pages","getPages","firstPage","width","height","getSize","drawText","x","y","size","save","slice","Blob","type","onFormSubmit","preventDefault","formData","FormData","append","full_name","value","date_of_birth","Date","getFullYear","method","body","json","data","alert","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","accept","src","style","border","onSubmit","enctype","name","placeholder","required"],"sources":["/Users/meeqatsuharwardy/forms_frontend/src/components/Forms/new_forms/I9/i9.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { PDFDocument } from \"pdf-lib\";\nimport I9 from \"../../../../assets/files/i-9.pdf\";\n\nexport default function PDFViewer() {\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const [pdfBytes, setPdfBytes] = useState(null); // Store the PDF bytes for submission\n\n  useEffect(() => {\n    fetch(I9)\n      .then((response) => {\n        if (response.ok) return response.blob();\n        throw new Error(\"Failed to load the initial PDF\");\n      })\n      .then((blob) => {\n        const url = URL.createObjectURL(blob);\n        setPdfUrl(url);\n      })\n      .catch((error) => console.error(\"Error loading PDF:\", error));\n  }, []);\n\n  const onFileChange = async (event) => {\n    const uploadedFile = event.target.files[0];\n    if (uploadedFile) {\n      const pdfDoc = await PDFDocument.load(await uploadedFile.arrayBuffer());\n      console.log(\"Original PDF loaded\");\n\n      // Simulate an editing operation\n      // For example, add a text to the first page (you must adjust according to your PDF structure)\n      const pages = pdfDoc.getPages();\n      const firstPage = pages[0];\n      const { width, height } = firstPage.getSize();\n      firstPage.drawText(\"Hello, this is a test edit!\", {\n        x: 50,\n        y: height - 100,\n        size: 25,\n      });\n\n      console.log(\"PDF edited\");\n\n      const pdfBytes = await pdfDoc.save();\n      console.log(\"PDF saved to bytes\", pdfBytes.slice(0, 100)); // Log first 100 bytes to confirm\n\n      const blob = new Blob([pdfBytes], { type: \"application/pdf\" });\n      const url = URL.createObjectURL(blob);\n      setPdfUrl(url);\n      setPdfBytes(pdfBytes); // Save the PDF bytes for later submission\n      console.log(\"PDF URL set for display\");\n    }\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    if (!pdfBytes) {\n      console.error(\"No PDF bytes available for submission.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"full_name\", event.target.full_name.value);\n    formData.append(\"date_of_birth\", event.target.date_of_birth.value);\n    formData.append(\"submitted_year\", new Date().getFullYear());\n    formData.append(\n      \"pdf_file\",\n      new Blob([pdfBytes], { type: \"application/pdf\" }),\n      \"edited.pdf\"\n    );\n\n    console.log(\"Submitting form\");\n\n    fetch(\"http://127.0.0.1:8000/upload_pdf/\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Submission response:\", data);\n        alert(\"PDF submitted successfully!\");\n      })\n      .catch((error) => {\n        console.error(\"Error submitting PDF:\", error);\n      });\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={onFileChange} accept=\"application/pdf\" />\n      {pdfUrl ? (\n        <iframe\n          src={pdfUrl}\n          style={{ width: \"100%\", height: \"500px\", border: \"none\" }}\n        />\n      ) : (\n        <p>Loading PDF...</p>\n      )}\n      <form onSubmit={onFormSubmit} enctype=\"multipart/form-data\">\n        <input name=\"full_name\" placeholder=\"Full Name\" required />\n        <input type=\"date\" name=\"date_of_birth\" required />\n        <button type=\"submit\">Save PDF</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}