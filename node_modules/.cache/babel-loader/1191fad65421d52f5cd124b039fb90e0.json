{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { MissingPageContentsEmbeddingError, UnrecognizedStreamTypeError } from \"../errors\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFRawStream from \"../objects/PDFRawStream\";\nimport PDFStream from \"../objects/PDFStream\";\nimport { decodePDFRawStream } from \"../streams/decode\";\nimport PDFContentStream from \"../structures/PDFContentStream\";\nimport CharCodes from \"../syntax/CharCodes\";\nimport { mergeIntoTypedArray } from \"../../utils\";\nvar fullPageBoundingBox = function (page) {\n  var mediaBox = page.MediaBox();\n  var width = mediaBox.lookup(2, PDFNumber).asNumber() - mediaBox.lookup(0, PDFNumber).asNumber();\n  var height = mediaBox.lookup(3, PDFNumber).asNumber() - mediaBox.lookup(1, PDFNumber).asNumber();\n  return {\n    left: 0,\n    bottom: 0,\n    right: width,\n    top: height\n  };\n};\n// Returns the identity matrix, modified to position the content of the given\n// bounding box at (0, 0).\nvar boundingBoxAdjustedMatrix = function (bb) {\n  return [1, 0, 0, 1, -bb.left, -bb.bottom];\n};\nvar PDFPageEmbedder = /** @class */function () {\n  function PDFPageEmbedder(page, boundingBox, transformationMatrix) {\n    this.page = page;\n    var bb = boundingBox !== null && boundingBox !== void 0 ? boundingBox : fullPageBoundingBox(page);\n    this.width = bb.right - bb.left;\n    this.height = bb.top - bb.bottom;\n    this.boundingBox = bb;\n    this.transformationMatrix = transformationMatrix !== null && transformationMatrix !== void 0 ? transformationMatrix : boundingBoxAdjustedMatrix(bb);\n  }\n  PDFPageEmbedder.for = function (page, boundingBox, transformationMatrix) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, new PDFPageEmbedder(page, boundingBox, transformationMatrix)];\n      });\n    });\n  };\n  PDFPageEmbedder.prototype.embedIntoContext = function (context, ref) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, Contents, Resources, decodedContents, _b, left, bottom, right, top, xObject;\n      return __generator(this, function (_c) {\n        _a = this.page.normalizedEntries(), Contents = _a.Contents, Resources = _a.Resources;\n        if (!Contents) throw new MissingPageContentsEmbeddingError();\n        decodedContents = this.decodeContents(Contents);\n        _b = this.boundingBox, left = _b.left, bottom = _b.bottom, right = _b.right, top = _b.top;\n        xObject = context.flateStream(decodedContents, {\n          Type: 'XObject',\n          Subtype: 'Form',\n          FormType: 1,\n          BBox: [left, bottom, right, top],\n          Matrix: this.transformationMatrix,\n          Resources: Resources\n        });\n        if (ref) {\n          context.assign(ref, xObject);\n          return [2 /*return*/, ref];\n        } else {\n          return [2 /*return*/, context.register(xObject)];\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n  // `contents` is an array of streams which are merged to include them in the XObject.\n  // This methods extracts each stream and joins them with a newline character.\n  PDFPageEmbedder.prototype.decodeContents = function (contents) {\n    var newline = Uint8Array.of(CharCodes.Newline);\n    var decodedContents = [];\n    for (var idx = 0, len = contents.size(); idx < len; idx++) {\n      var stream = contents.lookup(idx, PDFStream);\n      var content = void 0;\n      if (stream instanceof PDFRawStream) {\n        content = decodePDFRawStream(stream).decode();\n      } else if (stream instanceof PDFContentStream) {\n        content = stream.getUnencodedContents();\n      } else {\n        throw new UnrecognizedStreamTypeError(stream);\n      }\n      decodedContents.push(content, newline);\n    }\n    return mergeIntoTypedArray.apply(void 0, decodedContents);\n  };\n  return PDFPageEmbedder;\n}();\nexport default PDFPageEmbedder;","map":{"version":3,"sources":["../../../src/core/embedders/PDFPageEmbedder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { MissingPageContentsEmbeddingError, UnrecognizedStreamTypeError, } from \"../errors\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFRawStream from \"../objects/PDFRawStream\";\nimport PDFStream from \"../objects/PDFStream\";\nimport { decodePDFRawStream } from \"../streams/decode\";\nimport PDFContentStream from \"../structures/PDFContentStream\";\nimport CharCodes from \"../syntax/CharCodes\";\nimport { mergeIntoTypedArray } from \"../../utils\";\nvar fullPageBoundingBox = function (page) {\n    var mediaBox = page.MediaBox();\n    var width = mediaBox.lookup(2, PDFNumber).asNumber() -\n        mediaBox.lookup(0, PDFNumber).asNumber();\n    var height = mediaBox.lookup(3, PDFNumber).asNumber() -\n        mediaBox.lookup(1, PDFNumber).asNumber();\n    return { left: 0, bottom: 0, right: width, top: height };\n};\n// Returns the identity matrix, modified to position the content of the given\n// bounding box at (0, 0).\nvar boundingBoxAdjustedMatrix = function (bb) { return [1, 0, 0, 1, -bb.left, -bb.bottom]; };\nvar PDFPageEmbedder = /** @class */ (function () {\n    function PDFPageEmbedder(page, boundingBox, transformationMatrix) {\n        this.page = page;\n        var bb = boundingBox !== null && boundingBox !== void 0 ? boundingBox : fullPageBoundingBox(page);\n        this.width = bb.right - bb.left;\n        this.height = bb.top - bb.bottom;\n        this.boundingBox = bb;\n        this.transformationMatrix = transformationMatrix !== null && transformationMatrix !== void 0 ? transformationMatrix : boundingBoxAdjustedMatrix(bb);\n    }\n    PDFPageEmbedder.for = function (page, boundingBox, transformationMatrix) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new PDFPageEmbedder(page, boundingBox, transformationMatrix)];\n            });\n        });\n    };\n    PDFPageEmbedder.prototype.embedIntoContext = function (context, ref) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, Contents, Resources, decodedContents, _b, left, bottom, right, top, xObject;\n            return __generator(this, function (_c) {\n                _a = this.page.normalizedEntries(), Contents = _a.Contents, Resources = _a.Resources;\n                if (!Contents)\n                    throw new MissingPageContentsEmbeddingError();\n                decodedContents = this.decodeContents(Contents);\n                _b = this.boundingBox, left = _b.left, bottom = _b.bottom, right = _b.right, top = _b.top;\n                xObject = context.flateStream(decodedContents, {\n                    Type: 'XObject',\n                    Subtype: 'Form',\n                    FormType: 1,\n                    BBox: [left, bottom, right, top],\n                    Matrix: this.transformationMatrix,\n                    Resources: Resources,\n                });\n                if (ref) {\n                    context.assign(ref, xObject);\n                    return [2 /*return*/, ref];\n                }\n                else {\n                    return [2 /*return*/, context.register(xObject)];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    // `contents` is an array of streams which are merged to include them in the XObject.\n    // This methods extracts each stream and joins them with a newline character.\n    PDFPageEmbedder.prototype.decodeContents = function (contents) {\n        var newline = Uint8Array.of(CharCodes.Newline);\n        var decodedContents = [];\n        for (var idx = 0, len = contents.size(); idx < len; idx++) {\n            var stream = contents.lookup(idx, PDFStream);\n            var content = void 0;\n            if (stream instanceof PDFRawStream) {\n                content = decodePDFRawStream(stream).decode();\n            }\n            else if (stream instanceof PDFContentStream) {\n                content = stream.getUnencodedContents();\n            }\n            else {\n                throw new UnrecognizedStreamTypeError(stream);\n            }\n            decodedContents.push(content, newline);\n        }\n        return mergeIntoTypedArray.apply(void 0, decodedContents);\n    };\n    return PDFPageEmbedder;\n}());\nexport default PDFPageEmbedder;\n//# sourceMappingURL=PDFPageEmbedder.js.map"]},"metadata":{},"sourceType":"module"}