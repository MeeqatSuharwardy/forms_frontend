{"ast":null,"code":"// Originated from pdfkit Copyright (c) 2014 Devon Govett\n// https://github.com/foliojs/pdfkit/blob/1e62e6ffe24b378eb890df507a47610f4c4a7b24/lib/path.js\n// MIT LICENSE\n// Updated for pdf-lib & TypeScript by Jeremy Messenger\nimport { appendBezierCurve, appendQuadraticCurve, closePath, lineTo, moveTo } from \"./operators\";\nvar cx = 0;\nvar cy = 0;\nvar px = 0;\nvar py = 0;\nvar sx = 0;\nvar sy = 0;\nvar parameters = new Map([['A', 7], ['a', 7], ['C', 6], ['c', 6], ['H', 1], ['h', 1], ['L', 2], ['l', 2], ['M', 2], ['m', 2], ['Q', 4], ['q', 4], ['S', 4], ['s', 4], ['T', 2], ['t', 2], ['V', 1], ['v', 1], ['Z', 0], ['z', 0]]);\nvar parse = function (path) {\n  var cmd;\n  var ret = [];\n  var args = [];\n  var curArg = '';\n  var foundDecimal = false;\n  var params = 0;\n  for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n    var c = path_1[_i];\n    if (parameters.has(c)) {\n      params = parameters.get(c);\n      if (cmd) {\n        // save existing command\n        if (curArg.length > 0) {\n          args[args.length] = +curArg;\n        }\n        ret[ret.length] = {\n          cmd: cmd,\n          args: args\n        };\n        args = [];\n        curArg = '';\n        foundDecimal = false;\n      }\n      cmd = c;\n    } else if ([' ', ','].includes(c) || c === '-' && curArg.length > 0 && curArg[curArg.length - 1] !== 'e' || c === '.' && foundDecimal) {\n      if (curArg.length === 0) {\n        continue;\n      }\n      if (args.length === params) {\n        // handle reused commands\n        ret[ret.length] = {\n          cmd: cmd,\n          args: args\n        };\n        args = [+curArg];\n        // handle assumed commands\n        if (cmd === 'M') {\n          cmd = 'L';\n        }\n        if (cmd === 'm') {\n          cmd = 'l';\n        }\n      } else {\n        args[args.length] = +curArg;\n      }\n      foundDecimal = c === '.';\n      // fix for negative numbers or repeated decimals with no delimeter between commands\n      curArg = ['-', '.'].includes(c) ? c : '';\n    } else {\n      curArg += c;\n      if (c === '.') {\n        foundDecimal = true;\n      }\n    }\n  }\n  // add the last command\n  if (curArg.length > 0) {\n    if (args.length === params) {\n      // handle reused commands\n      ret[ret.length] = {\n        cmd: cmd,\n        args: args\n      };\n      args = [+curArg];\n      // handle assumed commands\n      if (cmd === 'M') {\n        cmd = 'L';\n      }\n      if (cmd === 'm') {\n        cmd = 'l';\n      }\n    } else {\n      args[args.length] = +curArg;\n    }\n  }\n  ret[ret.length] = {\n    cmd: cmd,\n    args: args\n  };\n  return ret;\n};\nvar apply = function (commands) {\n  // current point, control point, and subpath starting point\n  cx = cy = px = py = sx = sy = 0;\n  // run the commands\n  var cmds = [];\n  for (var i = 0; i < commands.length; i++) {\n    var c = commands[i];\n    if (c.cmd && typeof runners[c.cmd] === 'function') {\n      var cmd = runners[c.cmd](c.args);\n      if (Array.isArray(cmd)) {\n        cmds = cmds.concat(cmd);\n      } else {\n        cmds.push(cmd);\n      }\n    }\n  }\n  return cmds;\n};\nvar runners = {\n  M: function (a) {\n    cx = a[0];\n    cy = a[1];\n    px = py = null;\n    sx = cx;\n    sy = cy;\n    return moveTo(cx, cy);\n  },\n  m: function (a) {\n    cx += a[0];\n    cy += a[1];\n    px = py = null;\n    sx = cx;\n    sy = cy;\n    return moveTo(cx, cy);\n  },\n  C: function (a) {\n    cx = a[4];\n    cy = a[5];\n    px = a[2];\n    py = a[3];\n    return appendBezierCurve(a[0], a[1], a[2], a[3], a[4], a[5]);\n  },\n  c: function (a) {\n    var cmd = appendBezierCurve(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);\n    px = cx + a[2];\n    py = cy + a[3];\n    cx += a[4];\n    cy += a[5];\n    return cmd;\n  },\n  S: function (a) {\n    if (px === null || py === null) {\n      px = cx;\n      py = cy;\n    }\n    var cmd = appendBezierCurve(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);\n    px = a[0];\n    py = a[1];\n    cx = a[2];\n    cy = a[3];\n    return cmd;\n  },\n  s: function (a) {\n    if (px === null || py === null) {\n      px = cx;\n      py = cy;\n    }\n    var cmd = appendBezierCurve(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], cx + a[2], cy + a[3]);\n    px = cx + a[0];\n    py = cy + a[1];\n    cx += a[2];\n    cy += a[3];\n    return cmd;\n  },\n  Q: function (a) {\n    px = a[0];\n    py = a[1];\n    cx = a[2];\n    cy = a[3];\n    return appendQuadraticCurve(a[0], a[1], cx, cy);\n  },\n  q: function (a) {\n    var cmd = appendQuadraticCurve(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);\n    px = cx + a[0];\n    py = cy + a[1];\n    cx += a[2];\n    cy += a[3];\n    return cmd;\n  },\n  T: function (a) {\n    if (px === null || py === null) {\n      px = cx;\n      py = cy;\n    } else {\n      px = cx - (px - cx);\n      py = cy - (py - cy);\n    }\n    var cmd = appendQuadraticCurve(px, py, a[0], a[1]);\n    px = cx - (px - cx);\n    py = cy - (py - cy);\n    cx = a[0];\n    cy = a[1];\n    return cmd;\n  },\n  t: function (a) {\n    if (px === null || py === null) {\n      px = cx;\n      py = cy;\n    } else {\n      px = cx - (px - cx);\n      py = cy - (py - cy);\n    }\n    var cmd = appendQuadraticCurve(px, py, cx + a[0], cy + a[1]);\n    cx += a[0];\n    cy += a[1];\n    return cmd;\n  },\n  A: function (a) {\n    var cmds = solveArc(cx, cy, a);\n    cx = a[5];\n    cy = a[6];\n    return cmds;\n  },\n  a: function (a) {\n    a[5] += cx;\n    a[6] += cy;\n    var cmds = solveArc(cx, cy, a);\n    cx = a[5];\n    cy = a[6];\n    return cmds;\n  },\n  L: function (a) {\n    cx = a[0];\n    cy = a[1];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  l: function (a) {\n    cx += a[0];\n    cy += a[1];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  H: function (a) {\n    cx = a[0];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  h: function (a) {\n    cx += a[0];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  V: function (a) {\n    cy = a[0];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  v: function (a) {\n    cy += a[0];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  Z: function () {\n    var cmd = closePath();\n    cx = sx;\n    cy = sy;\n    return cmd;\n  },\n  z: function () {\n    var cmd = closePath();\n    cx = sx;\n    cy = sy;\n    return cmd;\n  }\n};\nvar solveArc = function (x, y, coords) {\n  var rx = coords[0],\n    ry = coords[1],\n    rot = coords[2],\n    large = coords[3],\n    sweep = coords[4],\n    ex = coords[5],\n    ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  var cmds = [];\n  for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n    var seg = segs_1[_i];\n    var bez = segmentToBezier.apply(void 0, seg);\n    cmds.push(appendBezierCurve.apply(void 0, bez));\n  }\n  return cmds;\n};\n// from Inkscape svgtopdf, thanks!\nvar arcToSegments = function (x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  var th = rotateX * (Math.PI / 180);\n  var sinTh = Math.sin(th);\n  var cosTh = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  px = cosTh * (ox - x) * 0.5 + sinTh * (oy - y) * 0.5;\n  py = cosTh * (oy - y) * 0.5 - sinTh * (ox - x) * 0.5;\n  var pl = px * px / (rx * rx) + py * py / (ry * ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n  var a00 = cosTh / rx;\n  var a01 = sinTh / rx;\n  var a10 = -sinTh / ry;\n  var a11 = cosTh / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n  var d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n  var sfactorSq = 1 / d - 0.25;\n  if (sfactorSq < 0) {\n    sfactorSq = 0;\n  }\n  var sfactor = Math.sqrt(sfactorSq);\n  if (sweep === large) {\n    sfactor = -sfactor;\n  }\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\n  var th0 = Math.atan2(y0 - yc, x0 - xc);\n  var th1 = Math.atan2(y1 - yc, x1 - xc);\n  var thArc = th1 - th0;\n  if (thArc < 0 && sweep === 1) {\n    thArc += 2 * Math.PI;\n  } else if (thArc > 0 && sweep === 0) {\n    thArc -= 2 * Math.PI;\n  }\n  var segments = Math.ceil(Math.abs(thArc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i = 0; i < segments; i++) {\n    var th2 = th0 + i * thArc / segments;\n    var th3 = th0 + (i + 1) * thArc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sinTh, cosTh];\n  }\n  return result;\n};\nvar segmentToBezier = function (cx1, cy1, th0, th1, rx, ry, sinTh, cosTh) {\n  var a00 = cosTh * rx;\n  var a01 = -sinTh * ry;\n  var a10 = sinTh * rx;\n  var a11 = cosTh * ry;\n  var thHalf = 0.5 * (th1 - th0);\n  var t = 8 / 3 * Math.sin(thHalf * 0.5) * Math.sin(thHalf * 0.5) / Math.sin(thHalf);\n  var x1 = cx1 + Math.cos(th0) - t * Math.sin(th0);\n  var y1 = cy1 + Math.sin(th0) + t * Math.cos(th0);\n  var x3 = cx1 + Math.cos(th1);\n  var y3 = cy1 + Math.sin(th1);\n  var x2 = x3 + t * Math.sin(th1);\n  var y2 = y3 - t * Math.cos(th1);\n  var result = [a00 * x1 + a01 * y1, a10 * x1 + a11 * y1, a00 * x2 + a01 * y2, a10 * x2 + a11 * y2, a00 * x3 + a01 * y3, a10 * x3 + a11 * y3];\n  return result;\n};\nexport var svgPathToOperators = function (path) {\n  return apply(parse(path));\n};","map":{"version":3,"sources":["../../src/api/svgPath.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["// Originated from pdfkit Copyright (c) 2014 Devon Govett\n// https://github.com/foliojs/pdfkit/blob/1e62e6ffe24b378eb890df507a47610f4c4a7b24/lib/path.js\n// MIT LICENSE\n// Updated for pdf-lib & TypeScript by Jeremy Messenger\nimport { appendBezierCurve, appendQuadraticCurve, closePath, lineTo, moveTo, } from \"./operators\";\nvar cx = 0;\nvar cy = 0;\nvar px = 0;\nvar py = 0;\nvar sx = 0;\nvar sy = 0;\nvar parameters = new Map([\n    ['A', 7],\n    ['a', 7],\n    ['C', 6],\n    ['c', 6],\n    ['H', 1],\n    ['h', 1],\n    ['L', 2],\n    ['l', 2],\n    ['M', 2],\n    ['m', 2],\n    ['Q', 4],\n    ['q', 4],\n    ['S', 4],\n    ['s', 4],\n    ['T', 2],\n    ['t', 2],\n    ['V', 1],\n    ['v', 1],\n    ['Z', 0],\n    ['z', 0],\n]);\nvar parse = function (path) {\n    var cmd;\n    var ret = [];\n    var args = [];\n    var curArg = '';\n    var foundDecimal = false;\n    var params = 0;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var c = path_1[_i];\n        if (parameters.has(c)) {\n            params = parameters.get(c);\n            if (cmd) {\n                // save existing command\n                if (curArg.length > 0) {\n                    args[args.length] = +curArg;\n                }\n                ret[ret.length] = { cmd: cmd, args: args };\n                args = [];\n                curArg = '';\n                foundDecimal = false;\n            }\n            cmd = c;\n        }\n        else if ([' ', ','].includes(c) ||\n            (c === '-' && curArg.length > 0 && curArg[curArg.length - 1] !== 'e') ||\n            (c === '.' && foundDecimal)) {\n            if (curArg.length === 0) {\n                continue;\n            }\n            if (args.length === params) {\n                // handle reused commands\n                ret[ret.length] = { cmd: cmd, args: args };\n                args = [+curArg];\n                // handle assumed commands\n                if (cmd === 'M') {\n                    cmd = 'L';\n                }\n                if (cmd === 'm') {\n                    cmd = 'l';\n                }\n            }\n            else {\n                args[args.length] = +curArg;\n            }\n            foundDecimal = c === '.';\n            // fix for negative numbers or repeated decimals with no delimeter between commands\n            curArg = ['-', '.'].includes(c) ? c : '';\n        }\n        else {\n            curArg += c;\n            if (c === '.') {\n                foundDecimal = true;\n            }\n        }\n    }\n    // add the last command\n    if (curArg.length > 0) {\n        if (args.length === params) {\n            // handle reused commands\n            ret[ret.length] = { cmd: cmd, args: args };\n            args = [+curArg];\n            // handle assumed commands\n            if (cmd === 'M') {\n                cmd = 'L';\n            }\n            if (cmd === 'm') {\n                cmd = 'l';\n            }\n        }\n        else {\n            args[args.length] = +curArg;\n        }\n    }\n    ret[ret.length] = { cmd: cmd, args: args };\n    return ret;\n};\nvar apply = function (commands) {\n    // current point, control point, and subpath starting point\n    cx = cy = px = py = sx = sy = 0;\n    // run the commands\n    var cmds = [];\n    for (var i = 0; i < commands.length; i++) {\n        var c = commands[i];\n        if (c.cmd && typeof runners[c.cmd] === 'function') {\n            var cmd = runners[c.cmd](c.args);\n            if (Array.isArray(cmd)) {\n                cmds = cmds.concat(cmd);\n            }\n            else {\n                cmds.push(cmd);\n            }\n        }\n    }\n    return cmds;\n};\nvar runners = {\n    M: function (a) {\n        cx = a[0];\n        cy = a[1];\n        px = py = null;\n        sx = cx;\n        sy = cy;\n        return moveTo(cx, cy);\n    },\n    m: function (a) {\n        cx += a[0];\n        cy += a[1];\n        px = py = null;\n        sx = cx;\n        sy = cy;\n        return moveTo(cx, cy);\n    },\n    C: function (a) {\n        cx = a[4];\n        cy = a[5];\n        px = a[2];\n        py = a[3];\n        return appendBezierCurve(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    c: function (a) {\n        var cmd = appendBezierCurve(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);\n        px = cx + a[2];\n        py = cy + a[3];\n        cx += a[4];\n        cy += a[5];\n        return cmd;\n    },\n    S: function (a) {\n        if (px === null || py === null) {\n            px = cx;\n            py = cy;\n        }\n        var cmd = appendBezierCurve(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);\n        px = a[0];\n        py = a[1];\n        cx = a[2];\n        cy = a[3];\n        return cmd;\n    },\n    s: function (a) {\n        if (px === null || py === null) {\n            px = cx;\n            py = cy;\n        }\n        var cmd = appendBezierCurve(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], cx + a[2], cy + a[3]);\n        px = cx + a[0];\n        py = cy + a[1];\n        cx += a[2];\n        cy += a[3];\n        return cmd;\n    },\n    Q: function (a) {\n        px = a[0];\n        py = a[1];\n        cx = a[2];\n        cy = a[3];\n        return appendQuadraticCurve(a[0], a[1], cx, cy);\n    },\n    q: function (a) {\n        var cmd = appendQuadraticCurve(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);\n        px = cx + a[0];\n        py = cy + a[1];\n        cx += a[2];\n        cy += a[3];\n        return cmd;\n    },\n    T: function (a) {\n        if (px === null || py === null) {\n            px = cx;\n            py = cy;\n        }\n        else {\n            px = cx - (px - cx);\n            py = cy - (py - cy);\n        }\n        var cmd = appendQuadraticCurve(px, py, a[0], a[1]);\n        px = cx - (px - cx);\n        py = cy - (py - cy);\n        cx = a[0];\n        cy = a[1];\n        return cmd;\n    },\n    t: function (a) {\n        if (px === null || py === null) {\n            px = cx;\n            py = cy;\n        }\n        else {\n            px = cx - (px - cx);\n            py = cy - (py - cy);\n        }\n        var cmd = appendQuadraticCurve(px, py, cx + a[0], cy + a[1]);\n        cx += a[0];\n        cy += a[1];\n        return cmd;\n    },\n    A: function (a) {\n        var cmds = solveArc(cx, cy, a);\n        cx = a[5];\n        cy = a[6];\n        return cmds;\n    },\n    a: function (a) {\n        a[5] += cx;\n        a[6] += cy;\n        var cmds = solveArc(cx, cy, a);\n        cx = a[5];\n        cy = a[6];\n        return cmds;\n    },\n    L: function (a) {\n        cx = a[0];\n        cy = a[1];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    l: function (a) {\n        cx += a[0];\n        cy += a[1];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    H: function (a) {\n        cx = a[0];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    h: function (a) {\n        cx += a[0];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    V: function (a) {\n        cy = a[0];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    v: function (a) {\n        cy += a[0];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    Z: function () {\n        var cmd = closePath();\n        cx = sx;\n        cy = sy;\n        return cmd;\n    },\n    z: function () {\n        var cmd = closePath();\n        cx = sx;\n        cy = sy;\n        return cmd;\n    },\n};\nvar solveArc = function (x, y, coords) {\n    var rx = coords[0], ry = coords[1], rot = coords[2], large = coords[3], sweep = coords[4], ex = coords[5], ey = coords[6];\n    var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n    var cmds = [];\n    for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n        var seg = segs_1[_i];\n        var bez = segmentToBezier.apply(void 0, seg);\n        cmds.push(appendBezierCurve.apply(void 0, bez));\n    }\n    return cmds;\n};\n// from Inkscape svgtopdf, thanks!\nvar arcToSegments = function (x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n    var th = rotateX * (Math.PI / 180);\n    var sinTh = Math.sin(th);\n    var cosTh = Math.cos(th);\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n    px = cosTh * (ox - x) * 0.5 + sinTh * (oy - y) * 0.5;\n    py = cosTh * (oy - y) * 0.5 - sinTh * (ox - x) * 0.5;\n    var pl = (px * px) / (rx * rx) + (py * py) / (ry * ry);\n    if (pl > 1) {\n        pl = Math.sqrt(pl);\n        rx *= pl;\n        ry *= pl;\n    }\n    var a00 = cosTh / rx;\n    var a01 = sinTh / rx;\n    var a10 = -sinTh / ry;\n    var a11 = cosTh / ry;\n    var x0 = a00 * ox + a01 * oy;\n    var y0 = a10 * ox + a11 * oy;\n    var x1 = a00 * x + a01 * y;\n    var y1 = a10 * x + a11 * y;\n    var d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n    var sfactorSq = 1 / d - 0.25;\n    if (sfactorSq < 0) {\n        sfactorSq = 0;\n    }\n    var sfactor = Math.sqrt(sfactorSq);\n    if (sweep === large) {\n        sfactor = -sfactor;\n    }\n    var xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\n    var yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\n    var th0 = Math.atan2(y0 - yc, x0 - xc);\n    var th1 = Math.atan2(y1 - yc, x1 - xc);\n    var thArc = th1 - th0;\n    if (thArc < 0 && sweep === 1) {\n        thArc += 2 * Math.PI;\n    }\n    else if (thArc > 0 && sweep === 0) {\n        thArc -= 2 * Math.PI;\n    }\n    var segments = Math.ceil(Math.abs(thArc / (Math.PI * 0.5 + 0.001)));\n    var result = [];\n    for (var i = 0; i < segments; i++) {\n        var th2 = th0 + (i * thArc) / segments;\n        var th3 = th0 + ((i + 1) * thArc) / segments;\n        result[i] = [xc, yc, th2, th3, rx, ry, sinTh, cosTh];\n    }\n    return result;\n};\nvar segmentToBezier = function (cx1, cy1, th0, th1, rx, ry, sinTh, cosTh) {\n    var a00 = cosTh * rx;\n    var a01 = -sinTh * ry;\n    var a10 = sinTh * rx;\n    var a11 = cosTh * ry;\n    var thHalf = 0.5 * (th1 - th0);\n    var t = ((8 / 3) * Math.sin(thHalf * 0.5) * Math.sin(thHalf * 0.5)) /\n        Math.sin(thHalf);\n    var x1 = cx1 + Math.cos(th0) - t * Math.sin(th0);\n    var y1 = cy1 + Math.sin(th0) + t * Math.cos(th0);\n    var x3 = cx1 + Math.cos(th1);\n    var y3 = cy1 + Math.sin(th1);\n    var x2 = x3 + t * Math.sin(th1);\n    var y2 = y3 - t * Math.cos(th1);\n    var result = [\n        a00 * x1 + a01 * y1,\n        a10 * x1 + a11 * y1,\n        a00 * x2 + a01 * y2,\n        a10 * x2 + a11 * y2,\n        a00 * x3 + a01 * y3,\n        a10 * x3 + a11 * y3,\n    ];\n    return result;\n};\nexport var svgPathToOperators = function (path) { return apply(parse(path)); };\n//# sourceMappingURL=svgPath.js.map"]},"metadata":{},"sourceType":"module"}