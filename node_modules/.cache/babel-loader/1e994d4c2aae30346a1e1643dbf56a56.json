{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFAcroTerminal from \"./PDFAcroTerminal\";\nvar PDFAcroText = /** @class */function (_super) {\n  __extends(PDFAcroText, _super);\n  function PDFAcroText() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PDFAcroText.prototype.MaxLen = function () {\n    var maxLen = this.dict.lookup(PDFName.of('MaxLen'));\n    if (maxLen instanceof PDFNumber) return maxLen;\n    return undefined;\n  };\n  PDFAcroText.prototype.Q = function () {\n    var q = this.dict.lookup(PDFName.of('Q'));\n    if (q instanceof PDFNumber) return q;\n    return undefined;\n  };\n  PDFAcroText.prototype.setMaxLength = function (maxLength) {\n    this.dict.set(PDFName.of('MaxLen'), PDFNumber.of(maxLength));\n  };\n  PDFAcroText.prototype.removeMaxLength = function () {\n    this.dict.delete(PDFName.of('MaxLen'));\n  };\n  PDFAcroText.prototype.getMaxLength = function () {\n    var _a;\n    return (_a = this.MaxLen()) === null || _a === void 0 ? void 0 : _a.asNumber();\n  };\n  PDFAcroText.prototype.setQuadding = function (quadding) {\n    this.dict.set(PDFName.of('Q'), PDFNumber.of(quadding));\n  };\n  PDFAcroText.prototype.getQuadding = function () {\n    var _a;\n    return (_a = this.Q()) === null || _a === void 0 ? void 0 : _a.asNumber();\n  };\n  PDFAcroText.prototype.setValue = function (value) {\n    this.dict.set(PDFName.of('V'), value);\n    // const widgets = this.getWidgets();\n    // for (let idx = 0, len = widgets.length; idx < len; idx++) {\n    //   const widget = widgets[idx];\n    //   const state = widget.getOnValue() === value ? value : PDFName.of('Off');\n    //   widget.setAppearanceState(state);\n    // }\n  };\n  PDFAcroText.prototype.removeValue = function () {\n    this.dict.delete(PDFName.of('V'));\n  };\n  PDFAcroText.prototype.getValue = function () {\n    var v = this.V();\n    if (v instanceof PDFString || v instanceof PDFHexString) return v;\n    return undefined;\n  };\n  PDFAcroText.fromDict = function (dict, ref) {\n    return new PDFAcroText(dict, ref);\n  };\n  PDFAcroText.create = function (context) {\n    var dict = context.obj({\n      FT: 'Tx',\n      Kids: []\n    });\n    var ref = context.register(dict);\n    return new PDFAcroText(dict, ref);\n  };\n  return PDFAcroText;\n}(PDFAcroTerminal);\nexport default PDFAcroText;","map":{"version":3,"sources":["../../../src/core/acroform/PDFAcroText.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFAcroTerminal from \"./PDFAcroTerminal\";\nvar PDFAcroText = /** @class */ (function (_super) {\n    __extends(PDFAcroText, _super);\n    function PDFAcroText() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PDFAcroText.prototype.MaxLen = function () {\n        var maxLen = this.dict.lookup(PDFName.of('MaxLen'));\n        if (maxLen instanceof PDFNumber)\n            return maxLen;\n        return undefined;\n    };\n    PDFAcroText.prototype.Q = function () {\n        var q = this.dict.lookup(PDFName.of('Q'));\n        if (q instanceof PDFNumber)\n            return q;\n        return undefined;\n    };\n    PDFAcroText.prototype.setMaxLength = function (maxLength) {\n        this.dict.set(PDFName.of('MaxLen'), PDFNumber.of(maxLength));\n    };\n    PDFAcroText.prototype.removeMaxLength = function () {\n        this.dict.delete(PDFName.of('MaxLen'));\n    };\n    PDFAcroText.prototype.getMaxLength = function () {\n        var _a;\n        return (_a = this.MaxLen()) === null || _a === void 0 ? void 0 : _a.asNumber();\n    };\n    PDFAcroText.prototype.setQuadding = function (quadding) {\n        this.dict.set(PDFName.of('Q'), PDFNumber.of(quadding));\n    };\n    PDFAcroText.prototype.getQuadding = function () {\n        var _a;\n        return (_a = this.Q()) === null || _a === void 0 ? void 0 : _a.asNumber();\n    };\n    PDFAcroText.prototype.setValue = function (value) {\n        this.dict.set(PDFName.of('V'), value);\n        // const widgets = this.getWidgets();\n        // for (let idx = 0, len = widgets.length; idx < len; idx++) {\n        //   const widget = widgets[idx];\n        //   const state = widget.getOnValue() === value ? value : PDFName.of('Off');\n        //   widget.setAppearanceState(state);\n        // }\n    };\n    PDFAcroText.prototype.removeValue = function () {\n        this.dict.delete(PDFName.of('V'));\n    };\n    PDFAcroText.prototype.getValue = function () {\n        var v = this.V();\n        if (v instanceof PDFString || v instanceof PDFHexString)\n            return v;\n        return undefined;\n    };\n    PDFAcroText.fromDict = function (dict, ref) { return new PDFAcroText(dict, ref); };\n    PDFAcroText.create = function (context) {\n        var dict = context.obj({\n            FT: 'Tx',\n            Kids: [],\n        });\n        var ref = context.register(dict);\n        return new PDFAcroText(dict, ref);\n    };\n    return PDFAcroText;\n}(PDFAcroTerminal));\nexport default PDFAcroText;\n//# sourceMappingURL=PDFAcroText.js.map"]},"metadata":{},"sourceType":"module"}