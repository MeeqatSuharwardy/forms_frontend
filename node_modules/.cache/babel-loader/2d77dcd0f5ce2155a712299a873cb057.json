{"ast":null,"code":"import PDFDict from \"../objects/PDFDict\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFArray from \"../objects/PDFArray\";\nimport PDFRef from \"../objects/PDFRef\";\nimport { findLastMatch } from \"../../utils\";\nimport { MissingDAEntryError, MissingTfOperatorError } from \"../errors\";\n// Examples:\n//   `/Helv 12 Tf` -> ['Helv', '12']\n//   `/HeBo 8.00 Tf` -> ['HeBo', '8.00']\n//   `/HeBo Tf` -> ['HeBo', undefined]\nvar tfRegex = /\\/([^\\0\\t\\n\\f\\r\\ ]+)[\\0\\t\\n\\f\\r\\ ]*(\\d*\\.\\d+|\\d+)?[\\0\\t\\n\\f\\r\\ ]+Tf/;\nvar PDFAcroField = /** @class */function () {\n  function PDFAcroField(dict, ref) {\n    this.dict = dict;\n    this.ref = ref;\n  }\n  PDFAcroField.prototype.T = function () {\n    return this.dict.lookupMaybe(PDFName.of('T'), PDFString, PDFHexString);\n  };\n  PDFAcroField.prototype.Ff = function () {\n    var numberOrRef = this.getInheritableAttribute(PDFName.of('Ff'));\n    return this.dict.context.lookupMaybe(numberOrRef, PDFNumber);\n  };\n  PDFAcroField.prototype.V = function () {\n    var valueOrRef = this.getInheritableAttribute(PDFName.of('V'));\n    return this.dict.context.lookup(valueOrRef);\n  };\n  PDFAcroField.prototype.Kids = function () {\n    return this.dict.lookupMaybe(PDFName.of('Kids'), PDFArray);\n  };\n  // Parent(): PDFDict | undefined {\n  //   return this.dict.lookupMaybe(PDFName.of('Parent'), PDFDict);\n  // }\n  PDFAcroField.prototype.DA = function () {\n    var da = this.dict.lookup(PDFName.of('DA'));\n    if (da instanceof PDFString || da instanceof PDFHexString) return da;\n    return undefined;\n  };\n  PDFAcroField.prototype.setKids = function (kids) {\n    this.dict.set(PDFName.of('Kids'), this.dict.context.obj(kids));\n  };\n  PDFAcroField.prototype.getParent = function () {\n    // const parent = this.Parent();\n    // if (!parent) return undefined;\n    // return new PDFAcroField(parent);\n    var parentRef = this.dict.get(PDFName.of('Parent'));\n    if (parentRef instanceof PDFRef) {\n      var parent_1 = this.dict.lookup(PDFName.of('Parent'), PDFDict);\n      return new PDFAcroField(parent_1, parentRef);\n    }\n    return undefined;\n  };\n  PDFAcroField.prototype.setParent = function (parent) {\n    if (!parent) this.dict.delete(PDFName.of('Parent'));else this.dict.set(PDFName.of('Parent'), parent);\n  };\n  PDFAcroField.prototype.getFullyQualifiedName = function () {\n    var parent = this.getParent();\n    if (!parent) return this.getPartialName();\n    return parent.getFullyQualifiedName() + \".\" + this.getPartialName();\n  };\n  PDFAcroField.prototype.getPartialName = function () {\n    var _a;\n    return (_a = this.T()) === null || _a === void 0 ? void 0 : _a.decodeText();\n  };\n  PDFAcroField.prototype.setPartialName = function (partialName) {\n    if (!partialName) this.dict.delete(PDFName.of('T'));else this.dict.set(PDFName.of('T'), PDFHexString.fromText(partialName));\n  };\n  PDFAcroField.prototype.setDefaultAppearance = function (appearance) {\n    this.dict.set(PDFName.of('DA'), PDFString.of(appearance));\n  };\n  PDFAcroField.prototype.getDefaultAppearance = function () {\n    var DA = this.DA();\n    if (DA instanceof PDFHexString) {\n      return DA.decodeText();\n    }\n    return DA === null || DA === void 0 ? void 0 : DA.asString();\n  };\n  PDFAcroField.prototype.setFontSize = function (fontSize) {\n    var _a;\n    var name = (_a = this.getFullyQualifiedName()) !== null && _a !== void 0 ? _a : '';\n    var da = this.getDefaultAppearance();\n    if (!da) throw new MissingDAEntryError(name);\n    var daMatch = findLastMatch(da, tfRegex);\n    if (!daMatch.match) throw new MissingTfOperatorError(name);\n    var daStart = da.slice(0, daMatch.pos - daMatch.match[0].length);\n    var daEnd = daMatch.pos <= da.length ? da.slice(daMatch.pos) : '';\n    var fontName = daMatch.match[1];\n    var modifiedDa = daStart + \" /\" + fontName + \" \" + fontSize + \" Tf \" + daEnd;\n    this.setDefaultAppearance(modifiedDa);\n  };\n  PDFAcroField.prototype.getFlags = function () {\n    var _a, _b;\n    return (_b = (_a = this.Ff()) === null || _a === void 0 ? void 0 : _a.asNumber()) !== null && _b !== void 0 ? _b : 0;\n  };\n  PDFAcroField.prototype.setFlags = function (flags) {\n    this.dict.set(PDFName.of('Ff'), PDFNumber.of(flags));\n  };\n  PDFAcroField.prototype.hasFlag = function (flag) {\n    var flags = this.getFlags();\n    return (flags & flag) !== 0;\n  };\n  PDFAcroField.prototype.setFlag = function (flag) {\n    var flags = this.getFlags();\n    this.setFlags(flags | flag);\n  };\n  PDFAcroField.prototype.clearFlag = function (flag) {\n    var flags = this.getFlags();\n    this.setFlags(flags & ~flag);\n  };\n  PDFAcroField.prototype.setFlagTo = function (flag, enable) {\n    if (enable) this.setFlag(flag);else this.clearFlag(flag);\n  };\n  PDFAcroField.prototype.getInheritableAttribute = function (name) {\n    var attribute;\n    this.ascend(function (node) {\n      if (!attribute) attribute = node.dict.get(name);\n    });\n    return attribute;\n  };\n  PDFAcroField.prototype.ascend = function (visitor) {\n    visitor(this);\n    var parent = this.getParent();\n    if (parent) parent.ascend(visitor);\n  };\n  return PDFAcroField;\n}();\nexport default PDFAcroField;","map":{"version":3,"sources":["../../../src/core/acroform/PDFAcroField.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PDFDict from \"../objects/PDFDict\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFArray from \"../objects/PDFArray\";\nimport PDFRef from \"../objects/PDFRef\";\nimport { findLastMatch } from \"../../utils\";\nimport { MissingDAEntryError, MissingTfOperatorError } from \"../errors\";\n// Examples:\n//   `/Helv 12 Tf` -> ['Helv', '12']\n//   `/HeBo 8.00 Tf` -> ['HeBo', '8.00']\n//   `/HeBo Tf` -> ['HeBo', undefined]\nvar tfRegex = /\\/([^\\0\\t\\n\\f\\r\\ ]+)[\\0\\t\\n\\f\\r\\ ]*(\\d*\\.\\d+|\\d+)?[\\0\\t\\n\\f\\r\\ ]+Tf/;\nvar PDFAcroField = /** @class */ (function () {\n    function PDFAcroField(dict, ref) {\n        this.dict = dict;\n        this.ref = ref;\n    }\n    PDFAcroField.prototype.T = function () {\n        return this.dict.lookupMaybe(PDFName.of('T'), PDFString, PDFHexString);\n    };\n    PDFAcroField.prototype.Ff = function () {\n        var numberOrRef = this.getInheritableAttribute(PDFName.of('Ff'));\n        return this.dict.context.lookupMaybe(numberOrRef, PDFNumber);\n    };\n    PDFAcroField.prototype.V = function () {\n        var valueOrRef = this.getInheritableAttribute(PDFName.of('V'));\n        return this.dict.context.lookup(valueOrRef);\n    };\n    PDFAcroField.prototype.Kids = function () {\n        return this.dict.lookupMaybe(PDFName.of('Kids'), PDFArray);\n    };\n    // Parent(): PDFDict | undefined {\n    //   return this.dict.lookupMaybe(PDFName.of('Parent'), PDFDict);\n    // }\n    PDFAcroField.prototype.DA = function () {\n        var da = this.dict.lookup(PDFName.of('DA'));\n        if (da instanceof PDFString || da instanceof PDFHexString)\n            return da;\n        return undefined;\n    };\n    PDFAcroField.prototype.setKids = function (kids) {\n        this.dict.set(PDFName.of('Kids'), this.dict.context.obj(kids));\n    };\n    PDFAcroField.prototype.getParent = function () {\n        // const parent = this.Parent();\n        // if (!parent) return undefined;\n        // return new PDFAcroField(parent);\n        var parentRef = this.dict.get(PDFName.of('Parent'));\n        if (parentRef instanceof PDFRef) {\n            var parent_1 = this.dict.lookup(PDFName.of('Parent'), PDFDict);\n            return new PDFAcroField(parent_1, parentRef);\n        }\n        return undefined;\n    };\n    PDFAcroField.prototype.setParent = function (parent) {\n        if (!parent)\n            this.dict.delete(PDFName.of('Parent'));\n        else\n            this.dict.set(PDFName.of('Parent'), parent);\n    };\n    PDFAcroField.prototype.getFullyQualifiedName = function () {\n        var parent = this.getParent();\n        if (!parent)\n            return this.getPartialName();\n        return parent.getFullyQualifiedName() + \".\" + this.getPartialName();\n    };\n    PDFAcroField.prototype.getPartialName = function () {\n        var _a;\n        return (_a = this.T()) === null || _a === void 0 ? void 0 : _a.decodeText();\n    };\n    PDFAcroField.prototype.setPartialName = function (partialName) {\n        if (!partialName)\n            this.dict.delete(PDFName.of('T'));\n        else\n            this.dict.set(PDFName.of('T'), PDFHexString.fromText(partialName));\n    };\n    PDFAcroField.prototype.setDefaultAppearance = function (appearance) {\n        this.dict.set(PDFName.of('DA'), PDFString.of(appearance));\n    };\n    PDFAcroField.prototype.getDefaultAppearance = function () {\n        var DA = this.DA();\n        if (DA instanceof PDFHexString) {\n            return DA.decodeText();\n        }\n        return DA === null || DA === void 0 ? void 0 : DA.asString();\n    };\n    PDFAcroField.prototype.setFontSize = function (fontSize) {\n        var _a;\n        var name = (_a = this.getFullyQualifiedName()) !== null && _a !== void 0 ? _a : '';\n        var da = this.getDefaultAppearance();\n        if (!da)\n            throw new MissingDAEntryError(name);\n        var daMatch = findLastMatch(da, tfRegex);\n        if (!daMatch.match)\n            throw new MissingTfOperatorError(name);\n        var daStart = da.slice(0, daMatch.pos - daMatch.match[0].length);\n        var daEnd = daMatch.pos <= da.length ? da.slice(daMatch.pos) : '';\n        var fontName = daMatch.match[1];\n        var modifiedDa = daStart + \" /\" + fontName + \" \" + fontSize + \" Tf \" + daEnd;\n        this.setDefaultAppearance(modifiedDa);\n    };\n    PDFAcroField.prototype.getFlags = function () {\n        var _a, _b;\n        return (_b = (_a = this.Ff()) === null || _a === void 0 ? void 0 : _a.asNumber()) !== null && _b !== void 0 ? _b : 0;\n    };\n    PDFAcroField.prototype.setFlags = function (flags) {\n        this.dict.set(PDFName.of('Ff'), PDFNumber.of(flags));\n    };\n    PDFAcroField.prototype.hasFlag = function (flag) {\n        var flags = this.getFlags();\n        return (flags & flag) !== 0;\n    };\n    PDFAcroField.prototype.setFlag = function (flag) {\n        var flags = this.getFlags();\n        this.setFlags(flags | flag);\n    };\n    PDFAcroField.prototype.clearFlag = function (flag) {\n        var flags = this.getFlags();\n        this.setFlags(flags & ~flag);\n    };\n    PDFAcroField.prototype.setFlagTo = function (flag, enable) {\n        if (enable)\n            this.setFlag(flag);\n        else\n            this.clearFlag(flag);\n    };\n    PDFAcroField.prototype.getInheritableAttribute = function (name) {\n        var attribute;\n        this.ascend(function (node) {\n            if (!attribute)\n                attribute = node.dict.get(name);\n        });\n        return attribute;\n    };\n    PDFAcroField.prototype.ascend = function (visitor) {\n        visitor(this);\n        var parent = this.getParent();\n        if (parent)\n            parent.ascend(visitor);\n    };\n    return PDFAcroField;\n}());\nexport default PDFAcroField;\n//# sourceMappingURL=PDFAcroField.js.map"]},"metadata":{},"sourceType":"module"}