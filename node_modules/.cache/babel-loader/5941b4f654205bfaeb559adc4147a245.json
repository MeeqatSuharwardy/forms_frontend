{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PrivateConstructorError } from \"../errors\";\nimport PDFObject from \"./PDFObject\";\nimport { copyStringIntoBuffer } from \"../../utils\";\nvar ENFORCER = {};\nvar pool = new Map();\nvar PDFRef = /** @class */function (_super) {\n  __extends(PDFRef, _super);\n  function PDFRef(enforcer, objectNumber, generationNumber) {\n    var _this = this;\n    if (enforcer !== ENFORCER) throw new PrivateConstructorError('PDFRef');\n    _this = _super.call(this) || this;\n    _this.objectNumber = objectNumber;\n    _this.generationNumber = generationNumber;\n    _this.tag = objectNumber + \" \" + generationNumber + \" R\";\n    return _this;\n  }\n  PDFRef.prototype.clone = function () {\n    return this;\n  };\n  PDFRef.prototype.toString = function () {\n    return this.tag;\n  };\n  PDFRef.prototype.sizeInBytes = function () {\n    return this.tag.length;\n  };\n  PDFRef.prototype.copyBytesInto = function (buffer, offset) {\n    offset += copyStringIntoBuffer(this.tag, buffer, offset);\n    return this.tag.length;\n  };\n  PDFRef.of = function (objectNumber, generationNumber) {\n    if (generationNumber === void 0) {\n      generationNumber = 0;\n    }\n    var tag = objectNumber + \" \" + generationNumber + \" R\";\n    var instance = pool.get(tag);\n    if (!instance) {\n      instance = new PDFRef(ENFORCER, objectNumber, generationNumber);\n      pool.set(tag, instance);\n    }\n    return instance;\n  };\n  return PDFRef;\n}(PDFObject);\nexport default PDFRef;","map":{"version":3,"sources":["../../../src/core/objects/PDFRef.ts"],"names":[],"mappings":";AAAA,SAAS,uBAAuB,QAAE,WAAA;AAClC,OAAO,SAAS,MAAA,aAAA;AAChB,SAAS,oBAAoB,QAAE,aAAA;AAE/B,IAAM,QAAQ,GAAG,CAAA,CAAE;AACnB,IAAM,IAAI,GAAG,IAAI,GAAG,CAAA,CAAkB;AAEtC,IAAA,MAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAqB,SAAA,CAAA,MAAA,EAAA,MAAA,CAAA;EAiBnB,SAAA,MAAA,CACE,QAAa,EACb,YAAoB,EACpB,gBAAwB,EAAA;IAH1B,IAAA,KAAA,GAAA,IAAA;IAKE,IAAI,QAAQ,KAAK,QAAQ,EAAE,MAAM,IAAI,uBAAuB,CAAC,QAAQ,CAAC;IACtE,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAO,IAAA,IAAA;IACP,KAAI,CAAC,YAAY,GAAG,YAAY;IAChC,KAAI,CAAC,gBAAgB,GAAG,gBAAgB;IACxC,KAAI,CAAC,GAAG,GAAM,YAAY,GAAA,GAAA,GAAI,gBAAgB,GAAA,IAAI;;EACpD;EAEA,MAAA,CAAA,SAAA,CAAA,KAAK,GAAL,YAAA;IACE,OAAO,IAAI;EACb,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;IACE,OAAO,IAAI,CAAC,GAAG;EACjB,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACE,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM;EACxB,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UAAc,MAAkB,EAAE,MAAc,EAAA;IAC9C,MAAM,IAAI,oBAAoB,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC;IACxD,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM;EACxB,CAAC;EA3CM,MAAA,CAAA,EAAE,GAAG,UAAC,YAAoB,EAAE,gBAAoB,EAAA;IAApB,IAAA,gBAAA,KAAA,KAAA,CAAA,EAAA;MAAA,gBAAA,GAAA,CAAoB;IAAA;IACrD,IAAM,GAAG,GAAM,YAAY,GAAA,GAAA,GAAI,gBAAgB,GAAA,IAAI;IAEnD,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;IAC5B,IAAI,CAAC,QAAQ,EAAE;MACb,QAAQ,GAAG,IAAI,MAAM,CAAC,QAAQ,EAAE,YAAY,EAAE,gBAAgB,CAAC;MAC/D,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC;IACxB;IAED,OAAO,QAAQ;EACjB,CAAC;EAkCH,OAAA,MAAC;CAAA,CA7CoB,SAAS,CAAA;AA+C9B,eAAe,MAAM","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { PrivateConstructorError } from \"../errors\";\nimport PDFObject from \"./PDFObject\";\nimport { copyStringIntoBuffer } from \"../../utils\";\nvar ENFORCER = {};\nvar pool = new Map();\nvar PDFRef = /** @class */ (function (_super) {\n    __extends(PDFRef, _super);\n    function PDFRef(enforcer, objectNumber, generationNumber) {\n        var _this = this;\n        if (enforcer !== ENFORCER)\n            throw new PrivateConstructorError('PDFRef');\n        _this = _super.call(this) || this;\n        _this.objectNumber = objectNumber;\n        _this.generationNumber = generationNumber;\n        _this.tag = objectNumber + \" \" + generationNumber + \" R\";\n        return _this;\n    }\n    PDFRef.prototype.clone = function () {\n        return this;\n    };\n    PDFRef.prototype.toString = function () {\n        return this.tag;\n    };\n    PDFRef.prototype.sizeInBytes = function () {\n        return this.tag.length;\n    };\n    PDFRef.prototype.copyBytesInto = function (buffer, offset) {\n        offset += copyStringIntoBuffer(this.tag, buffer, offset);\n        return this.tag.length;\n    };\n    PDFRef.of = function (objectNumber, generationNumber) {\n        if (generationNumber === void 0) { generationNumber = 0; }\n        var tag = objectNumber + \" \" + generationNumber + \" R\";\n        var instance = pool.get(tag);\n        if (!instance) {\n            instance = new PDFRef(ENFORCER, objectNumber, generationNumber);\n            pool.set(tag, instance);\n        }\n        return instance;\n    };\n    return PDFRef;\n}(PDFObject));\nexport default PDFRef;\n//# sourceMappingURL=PDFRef.js.map"]},"metadata":{},"sourceType":"module"}