{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\n// prettier-ignore\nvar MARKERS = [0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc5, 0xffc6, 0xffc7, 0xffc8, 0xffc9, 0xffca, 0xffcb, 0xffcc, 0xffcd, 0xffce, 0xffcf];\nvar ColorSpace;\n(function (ColorSpace) {\n  ColorSpace[\"DeviceGray\"] = \"DeviceGray\";\n  ColorSpace[\"DeviceRGB\"] = \"DeviceRGB\";\n  ColorSpace[\"DeviceCMYK\"] = \"DeviceCMYK\";\n})(ColorSpace || (ColorSpace = {}));\nvar ChannelToColorSpace = {\n  1: ColorSpace.DeviceGray,\n  3: ColorSpace.DeviceRGB,\n  4: ColorSpace.DeviceCMYK\n};\n/**\n * A note of thanks to the developers of https://github.com/foliojs/pdfkit, as\n * this class borrows from:\n *   https://github.com/foliojs/pdfkit/blob/a6af76467ce06bd6a2af4aa7271ccac9ff152a7d/lib/image/jpeg.js\n */\nvar JpegEmbedder = /** @class */function () {\n  function JpegEmbedder(imageData, bitsPerComponent, width, height, colorSpace) {\n    this.imageData = imageData;\n    this.bitsPerComponent = bitsPerComponent;\n    this.width = width;\n    this.height = height;\n    this.colorSpace = colorSpace;\n  }\n  JpegEmbedder.for = function (imageData) {\n    return __awaiter(this, void 0, void 0, function () {\n      var dataView, soi, pos, marker, bitsPerComponent, height, width, channelByte, channelName, colorSpace;\n      return __generator(this, function (_a) {\n        dataView = new DataView(imageData.buffer);\n        soi = dataView.getUint16(0);\n        if (soi !== 0xffd8) throw new Error('SOI not found in JPEG');\n        pos = 2;\n        while (pos < dataView.byteLength) {\n          marker = dataView.getUint16(pos);\n          pos += 2;\n          if (MARKERS.includes(marker)) break;\n          pos += dataView.getUint16(pos);\n        }\n        if (!MARKERS.includes(marker)) throw new Error('Invalid JPEG');\n        pos += 2;\n        bitsPerComponent = dataView.getUint8(pos++);\n        height = dataView.getUint16(pos);\n        pos += 2;\n        width = dataView.getUint16(pos);\n        pos += 2;\n        channelByte = dataView.getUint8(pos++);\n        channelName = ChannelToColorSpace[channelByte];\n        if (!channelName) throw new Error('Unknown JPEG channel.');\n        colorSpace = channelName;\n        return [2 /*return*/, new JpegEmbedder(imageData, bitsPerComponent, width, height, colorSpace)];\n      });\n    });\n  };\n  JpegEmbedder.prototype.embedIntoContext = function (context, ref) {\n    return __awaiter(this, void 0, void 0, function () {\n      var xObject;\n      return __generator(this, function (_a) {\n        xObject = context.stream(this.imageData, {\n          Type: 'XObject',\n          Subtype: 'Image',\n          BitsPerComponent: this.bitsPerComponent,\n          Width: this.width,\n          Height: this.height,\n          ColorSpace: this.colorSpace,\n          Filter: 'DCTDecode',\n          // CMYK JPEG streams in PDF are typically stored complemented,\n          // with 1 as 'off' and 0 as 'on' (PDF 32000-1:2008, 8.6.4.4).\n          //\n          // Standalone CMYK JPEG (usually exported by Photoshop) are\n          // stored inverse, with 0 as 'off' and 1 as 'on', like RGB.\n          //\n          // Applying a swap here as a hedge that most bytes passing\n          // through this method will benefit from it.\n          Decode: this.colorSpace === ColorSpace.DeviceCMYK ? [1, 0, 1, 0, 1, 0, 1, 0] : undefined\n        });\n        if (ref) {\n          context.assign(ref, xObject);\n          return [2 /*return*/, ref];\n        } else {\n          return [2 /*return*/, context.register(xObject)];\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n  return JpegEmbedder;\n}();\nexport default JpegEmbedder;","map":{"version":3,"sources":["../../../src/core/embedders/JpegEmbedder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\n// prettier-ignore\nvar MARKERS = [\n    0xffc0, 0xffc1, 0xffc2,\n    0xffc3, 0xffc5, 0xffc6,\n    0xffc7, 0xffc8, 0xffc9,\n    0xffca, 0xffcb, 0xffcc,\n    0xffcd, 0xffce, 0xffcf,\n];\nvar ColorSpace;\n(function (ColorSpace) {\n    ColorSpace[\"DeviceGray\"] = \"DeviceGray\";\n    ColorSpace[\"DeviceRGB\"] = \"DeviceRGB\";\n    ColorSpace[\"DeviceCMYK\"] = \"DeviceCMYK\";\n})(ColorSpace || (ColorSpace = {}));\nvar ChannelToColorSpace = {\n    1: ColorSpace.DeviceGray,\n    3: ColorSpace.DeviceRGB,\n    4: ColorSpace.DeviceCMYK,\n};\n/**\n * A note of thanks to the developers of https://github.com/foliojs/pdfkit, as\n * this class borrows from:\n *   https://github.com/foliojs/pdfkit/blob/a6af76467ce06bd6a2af4aa7271ccac9ff152a7d/lib/image/jpeg.js\n */\nvar JpegEmbedder = /** @class */ (function () {\n    function JpegEmbedder(imageData, bitsPerComponent, width, height, colorSpace) {\n        this.imageData = imageData;\n        this.bitsPerComponent = bitsPerComponent;\n        this.width = width;\n        this.height = height;\n        this.colorSpace = colorSpace;\n    }\n    JpegEmbedder.for = function (imageData) {\n        return __awaiter(this, void 0, void 0, function () {\n            var dataView, soi, pos, marker, bitsPerComponent, height, width, channelByte, channelName, colorSpace;\n            return __generator(this, function (_a) {\n                dataView = new DataView(imageData.buffer);\n                soi = dataView.getUint16(0);\n                if (soi !== 0xffd8)\n                    throw new Error('SOI not found in JPEG');\n                pos = 2;\n                while (pos < dataView.byteLength) {\n                    marker = dataView.getUint16(pos);\n                    pos += 2;\n                    if (MARKERS.includes(marker))\n                        break;\n                    pos += dataView.getUint16(pos);\n                }\n                if (!MARKERS.includes(marker))\n                    throw new Error('Invalid JPEG');\n                pos += 2;\n                bitsPerComponent = dataView.getUint8(pos++);\n                height = dataView.getUint16(pos);\n                pos += 2;\n                width = dataView.getUint16(pos);\n                pos += 2;\n                channelByte = dataView.getUint8(pos++);\n                channelName = ChannelToColorSpace[channelByte];\n                if (!channelName)\n                    throw new Error('Unknown JPEG channel.');\n                colorSpace = channelName;\n                return [2 /*return*/, new JpegEmbedder(imageData, bitsPerComponent, width, height, colorSpace)];\n            });\n        });\n    };\n    JpegEmbedder.prototype.embedIntoContext = function (context, ref) {\n        return __awaiter(this, void 0, void 0, function () {\n            var xObject;\n            return __generator(this, function (_a) {\n                xObject = context.stream(this.imageData, {\n                    Type: 'XObject',\n                    Subtype: 'Image',\n                    BitsPerComponent: this.bitsPerComponent,\n                    Width: this.width,\n                    Height: this.height,\n                    ColorSpace: this.colorSpace,\n                    Filter: 'DCTDecode',\n                    // CMYK JPEG streams in PDF are typically stored complemented,\n                    // with 1 as 'off' and 0 as 'on' (PDF 32000-1:2008, 8.6.4.4).\n                    //\n                    // Standalone CMYK JPEG (usually exported by Photoshop) are\n                    // stored inverse, with 0 as 'off' and 1 as 'on', like RGB.\n                    //\n                    // Applying a swap here as a hedge that most bytes passing\n                    // through this method will benefit from it.\n                    Decode: this.colorSpace === ColorSpace.DeviceCMYK\n                        ? [1, 0, 1, 0, 1, 0, 1, 0]\n                        : undefined,\n                });\n                if (ref) {\n                    context.assign(ref, xObject);\n                    return [2 /*return*/, ref];\n                }\n                else {\n                    return [2 /*return*/, context.register(xObject)];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    return JpegEmbedder;\n}());\nexport default JpegEmbedder;\n//# sourceMappingURL=JpegEmbedder.js.map"]},"metadata":{},"sourceType":"module"}