{"ast":null,"code":"import CharCodes from \"../syntax/CharCodes\";\nimport { copyStringIntoBuffer } from \"../../utils\";\nvar PDFTrailer = /** @class */function () {\n  function PDFTrailer(lastXRefOffset) {\n    this.lastXRefOffset = String(lastXRefOffset);\n  }\n  PDFTrailer.prototype.toString = function () {\n    return \"startxref\\n\" + this.lastXRefOffset + \"\\n%%EOF\";\n  };\n  PDFTrailer.prototype.sizeInBytes = function () {\n    return 16 + this.lastXRefOffset.length;\n  };\n  PDFTrailer.prototype.copyBytesInto = function (buffer, offset) {\n    var initialOffset = offset;\n    buffer[offset++] = CharCodes.s;\n    buffer[offset++] = CharCodes.t;\n    buffer[offset++] = CharCodes.a;\n    buffer[offset++] = CharCodes.r;\n    buffer[offset++] = CharCodes.t;\n    buffer[offset++] = CharCodes.x;\n    buffer[offset++] = CharCodes.r;\n    buffer[offset++] = CharCodes.e;\n    buffer[offset++] = CharCodes.f;\n    buffer[offset++] = CharCodes.Newline;\n    offset += copyStringIntoBuffer(this.lastXRefOffset, buffer, offset);\n    buffer[offset++] = CharCodes.Newline;\n    buffer[offset++] = CharCodes.Percent;\n    buffer[offset++] = CharCodes.Percent;\n    buffer[offset++] = CharCodes.E;\n    buffer[offset++] = CharCodes.O;\n    buffer[offset++] = CharCodes.F;\n    return offset - initialOffset;\n  };\n  PDFTrailer.forLastCrossRefSectionOffset = function (offset) {\n    return new PDFTrailer(offset);\n  };\n  return PDFTrailer;\n}();\nexport default PDFTrailer;","map":{"version":3,"sources":["../../../src/core/document/PDFTrailer.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAA,qBAAA;AAChB,SAAS,oBAAoB,QAAE,aAAA;AAE/B,IAAA,UAAA,GAAA,aAAA,YAAA;EAME,SAAA,UAAA,CAAoB,cAAsB,EAAA;IACxC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;EAC9C;EAEA,UAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;IACE,OAAO,aAAA,GAAc,IAAI,CAAC,cAAc,GAAA,SAAS;EACnD,CAAC;EAED,UAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACE,OAAO,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM;EACxC,CAAC;EAED,UAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UAAc,MAAkB,EAAE,MAAc,EAAA;IAC9C,IAAM,aAAa,GAAG,MAAM;IAE5B,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC;IAC9B,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC;IAC9B,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC;IAC9B,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC;IAC9B,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC;IAC9B,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC;IAC9B,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC;IAC9B,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC;IAC9B,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC;IAC9B,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,OAAO;IAEpC,MAAM,IAAI,oBAAoB,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,EAAE,MAAM,CAAC;IAEnE,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,OAAO;IACpC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,OAAO;IACpC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,OAAO;IACpC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC;IAC9B,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC;IAC9B,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC;IAE9B,OAAO,MAAM,GAAG,aAAa;EAC/B,CAAC;EAzCM,UAAA,CAAA,4BAA4B,GAAG,UAAC,MAAc,EAAA;IACnD,OAAA,IAAI,UAAU,CAAC,MAAM,CAAC;EAAtB,CAAsB;EAyC1B,OAAA,UAAC;CAAA,CAAA,CAAA;AAED,eAAe,UAAU","sourceRoot":"","sourcesContent":["import CharCodes from \"../syntax/CharCodes\";\nimport { copyStringIntoBuffer } from \"../../utils\";\nvar PDFTrailer = /** @class */ (function () {\n    function PDFTrailer(lastXRefOffset) {\n        this.lastXRefOffset = String(lastXRefOffset);\n    }\n    PDFTrailer.prototype.toString = function () {\n        return \"startxref\\n\" + this.lastXRefOffset + \"\\n%%EOF\";\n    };\n    PDFTrailer.prototype.sizeInBytes = function () {\n        return 16 + this.lastXRefOffset.length;\n    };\n    PDFTrailer.prototype.copyBytesInto = function (buffer, offset) {\n        var initialOffset = offset;\n        buffer[offset++] = CharCodes.s;\n        buffer[offset++] = CharCodes.t;\n        buffer[offset++] = CharCodes.a;\n        buffer[offset++] = CharCodes.r;\n        buffer[offset++] = CharCodes.t;\n        buffer[offset++] = CharCodes.x;\n        buffer[offset++] = CharCodes.r;\n        buffer[offset++] = CharCodes.e;\n        buffer[offset++] = CharCodes.f;\n        buffer[offset++] = CharCodes.Newline;\n        offset += copyStringIntoBuffer(this.lastXRefOffset, buffer, offset);\n        buffer[offset++] = CharCodes.Newline;\n        buffer[offset++] = CharCodes.Percent;\n        buffer[offset++] = CharCodes.Percent;\n        buffer[offset++] = CharCodes.E;\n        buffer[offset++] = CharCodes.O;\n        buffer[offset++] = CharCodes.F;\n        return offset - initialOffset;\n    };\n    PDFTrailer.forLastCrossRefSectionOffset = function (offset) {\n        return new PDFTrailer(offset);\n    };\n    return PDFTrailer;\n}());\nexport default PDFTrailer;\n//# sourceMappingURL=PDFTrailer.js.map"]},"metadata":{},"sourceType":"module"}