{"ast":null,"code":"import CharCodes from \"./CharCodes\";\nimport { IsDelimiter } from \"./Delimiters\";\nimport { IsWhitespace } from \"./Whitespace\";\nexport var IsIrregular = new Uint8Array(256);\nfor (var idx = 0, len = 256; idx < len; idx++) {\n  IsIrregular[idx] = IsWhitespace[idx] || IsDelimiter[idx] ? 1 : 0;\n}\nIsIrregular[CharCodes.Hash] = 1;","map":{"version":3,"sources":["../../../src/core/syntax/Irregular.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAA,aAAA;AAChB,SAAS,WAAW,QAAE,cAAA;AACtB,SAAS,YAAY,QAAE,cAAA;AAEvB,OAAO,IAAM,WAAW,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC;AAE9C,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE;EAC7C,WAAW,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC,IAAI,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AACjE;AACD,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC","sourceRoot":"","sourcesContent":["import CharCodes from \"./CharCodes\";\nimport { IsDelimiter } from \"./Delimiters\";\nimport { IsWhitespace } from \"./Whitespace\";\nexport var IsIrregular = new Uint8Array(256);\nfor (var idx = 0, len = 256; idx < len; idx++) {\n    IsIrregular[idx] = IsWhitespace[idx] || IsDelimiter[idx] ? 1 : 0;\n}\nIsIrregular[CharCodes.Hash] = 1;\n//# sourceMappingURL=Irregular.js.map"]},"metadata":{},"sourceType":"module"}