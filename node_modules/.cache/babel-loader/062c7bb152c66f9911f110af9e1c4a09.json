{"ast":null,"code":"var _jsxFileName = \"/Users/meeqatsuharwardy/forms_frontend/src/components/Forms/new_forms/I9/i9.js\";\nimport React, { useState } from \"react\";\nimport { PDFDocument } from \"pdf-lib\";\nimport I9 from \"../../../../assets/files/i-9.pdf\";\nexport default function PDFViewer() {\n  const [pdfBlob, setPdfBlob] = useState(I9); // Store the blob directly\n\n  const onFileChange = async event => {\n    const uploadedFile = event.target.files[0];\n    if (uploadedFile) {\n      const pdfDoc = await PDFDocument.load(await uploadedFile.arrayBuffer());\n      // Perform your pdf-lib operations here, e.g., fill in forms\n\n      const pdfBytes = await pdfDoc.save();\n      const blob = new Blob([pdfBytes], {\n        type: \"application/pdf\"\n      });\n      setPdfBlob(blob); // Store the blob\n      setPdfUrl(URL.createObjectURL(blob)); // For display only\n    }\n  };\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"full_name\", event.target.full_name.value);\n    formData.append(\"date_of_birth\", event.target.date_of_birth.value);\n    formData.append(\"submitted_year\", new Date().getFullYear());\n    formData.append(\"pdf_file\", pdfBlob, \"edited.pdf\"); // Use the blob directly\n\n    fetch(\"http://127.0.0.1:8000/upload_pdf/\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(data => console.log(data));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: onFileChange,\n    accept: \"application/pdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"iframe\", {\n    src: URL.createObjectURL(pdfBlob),\n    width: \"100%\",\n    height: \"500px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onFormSubmit,\n    enctype: \"multipart/form-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"full_name\",\n    placeholder: \"Full Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"date_of_birth\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Save PDF\")));\n}","map":{"version":3,"names":["React","useState","PDFDocument","I9","PDFViewer","pdfBlob","setPdfBlob","onFileChange","event","uploadedFile","target","files","pdfDoc","load","arrayBuffer","pdfBytes","save","blob","Blob","type","setPdfUrl","URL","createObjectURL","onFormSubmit","preventDefault","formData","FormData","append","full_name","value","date_of_birth","Date","getFullYear","fetch","method","body","then","response","json","data","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","accept","src","width","height","onSubmit","enctype","name","placeholder","required"],"sources":["/Users/meeqatsuharwardy/forms_frontend/src/components/Forms/new_forms/I9/i9.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { PDFDocument } from \"pdf-lib\";\nimport I9 from \"../../../../assets/files/i-9.pdf\";\n\nexport default function PDFViewer() {\n  const [pdfBlob, setPdfBlob] = useState(I9); // Store the blob directly\n\n  const onFileChange = async (event) => {\n    const uploadedFile = event.target.files[0];\n    if (uploadedFile) {\n      const pdfDoc = await PDFDocument.load(await uploadedFile.arrayBuffer());\n      // Perform your pdf-lib operations here, e.g., fill in forms\n\n      const pdfBytes = await pdfDoc.save();\n      const blob = new Blob([pdfBytes], { type: \"application/pdf\" });\n      setPdfBlob(blob); // Store the blob\n      setPdfUrl(URL.createObjectURL(blob)); // For display only\n    }\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"full_name\", event.target.full_name.value);\n    formData.append(\"date_of_birth\", event.target.date_of_birth.value);\n    formData.append(\"submitted_year\", new Date().getFullYear());\n    formData.append(\"pdf_file\", pdfBlob, \"edited.pdf\"); // Use the blob directly\n\n    fetch(\"http://127.0.0.1:8000/upload_pdf/\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((data) => console.log(data));\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={onFileChange} accept=\"application/pdf\" />\n      <iframe src={URL.createObjectURL(pdfBlob)} width=\"100%\" height=\"500px\" />\n      <form onSubmit={onFormSubmit} enctype=\"multipart/form-data\">\n        <input name=\"full_name\" placeholder=\"Full Name\" required />\n        <input type=\"date\" name=\"date_of_birth\" required />\n        <button type=\"submit\">Save PDF</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}