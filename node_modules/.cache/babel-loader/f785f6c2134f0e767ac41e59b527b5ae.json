{"ast":null,"code":"import { __extends } from \"tslib\";\nimport pako from 'pako';\nimport { MethodNotImplementedError } from \"../errors\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFStream from \"../objects/PDFStream\";\nimport { Cache } from \"../../utils\";\nvar PDFFlateStream = /** @class */function (_super) {\n  __extends(PDFFlateStream, _super);\n  function PDFFlateStream(dict, encode) {\n    var _this = _super.call(this, dict) || this;\n    _this.computeContents = function () {\n      var unencodedContents = _this.getUnencodedContents();\n      return _this.encode ? pako.deflate(unencodedContents) : unencodedContents;\n    };\n    _this.encode = encode;\n    if (encode) dict.set(PDFName.of('Filter'), PDFName.of('FlateDecode'));\n    _this.contentsCache = Cache.populatedBy(_this.computeContents);\n    return _this;\n  }\n  PDFFlateStream.prototype.getContents = function () {\n    return this.contentsCache.access();\n  };\n  PDFFlateStream.prototype.getContentsSize = function () {\n    return this.contentsCache.access().length;\n  };\n  PDFFlateStream.prototype.getUnencodedContents = function () {\n    throw new MethodNotImplementedError(this.constructor.name, 'getUnencodedContents');\n  };\n  return PDFFlateStream;\n}(PDFStream);\nexport default PDFFlateStream;","map":{"version":3,"sources":["../../../src/core/structures/PDFFlateStream.ts"],"names":[],"mappings":";AAAA,OAAO,IAAI,MAAM,MAAM;AAEvB,SAAS,yBAAyB,QAAE,WAAA;AAEpC,OAAO,OAAO,MAAA,oBAAA;AACd,OAAO,SAAS,MAAA,sBAAA;AAChB,SAAS,KAAK,QAAE,aAAA;AAEhB,IAAA,cAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA6B,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;EAI3B,SAAA,cAAA,CAAY,IAAa,EAAE,MAAe,EAAA;IAA1C,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAI,CAAC,IAAA,IAAA;IAQb,KAAA,CAAA,eAAe,GAAG,YAAA;MAChB,IAAM,iBAAiB,GAAG,KAAI,CAAC,oBAAoB,CAAA,CAAE;MACrD,OAAO,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,GAAG,iBAAiB;IAC1E,CAAC;IATC,KAAI,CAAC,MAAM,GAAG,MAAM;IAEpB,IAAI,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IACrE,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC,WAAW,CAAC,KAAI,CAAC,eAAe,CAAC;;EAC9D;EAOA,cAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACE,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAA,CAAE;EACpC,CAAC;EAED,cAAA,CAAA,SAAA,CAAA,eAAe,GAAf,YAAA;IACE,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAA,CAAE,CAAC,MAAM;EAC3C,CAAC;EAED,cAAA,CAAA,SAAA,CAAA,oBAAoB,GAApB,YAAA;IACE,MAAM,IAAI,yBAAyB,CACjC,IAAI,CAAC,WAAW,CAAC,IAAI,EACrB,sBAAsB,CACvB;EACH,CAAC;EACH,OAAA,cAAC;AAAD,CAAC,CAhC4B,SAAS,CAAA;AAkCtC,eAAe,cAAc","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport pako from 'pako';\nimport { MethodNotImplementedError } from \"../errors\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFStream from \"../objects/PDFStream\";\nimport { Cache } from \"../../utils\";\nvar PDFFlateStream = /** @class */ (function (_super) {\n    __extends(PDFFlateStream, _super);\n    function PDFFlateStream(dict, encode) {\n        var _this = _super.call(this, dict) || this;\n        _this.computeContents = function () {\n            var unencodedContents = _this.getUnencodedContents();\n            return _this.encode ? pako.deflate(unencodedContents) : unencodedContents;\n        };\n        _this.encode = encode;\n        if (encode)\n            dict.set(PDFName.of('Filter'), PDFName.of('FlateDecode'));\n        _this.contentsCache = Cache.populatedBy(_this.computeContents);\n        return _this;\n    }\n    PDFFlateStream.prototype.getContents = function () {\n        return this.contentsCache.access();\n    };\n    PDFFlateStream.prototype.getContentsSize = function () {\n        return this.contentsCache.access().length;\n    };\n    PDFFlateStream.prototype.getUnencodedContents = function () {\n        throw new MethodNotImplementedError(this.constructor.name, 'getUnencodedContents');\n    };\n    return PDFFlateStream;\n}(PDFStream));\nexport default PDFFlateStream;\n//# sourceMappingURL=PDFFlateStream.js.map"]},"metadata":{},"sourceType":"module"}