{"ast":null,"code":"import { asNumber, asPDFName, asPDFNumber } from \"./objects\";\nimport { degreesToRadians } from \"./rotations\";\nimport { PDFOperator, PDFOperatorNames as Ops } from \"../core\";\n/* ==================== Clipping Path Operators ==================== */\nexport var clip = function () {\n  return PDFOperator.of(Ops.ClipNonZero);\n};\nexport var clipEvenOdd = function () {\n  return PDFOperator.of(Ops.ClipEvenOdd);\n};\n/* ==================== Graphics State Operators ==================== */\nvar cos = Math.cos,\n  sin = Math.sin,\n  tan = Math.tan;\nexport var concatTransformationMatrix = function (a, b, c, d, e, f) {\n  return PDFOperator.of(Ops.ConcatTransformationMatrix, [asPDFNumber(a), asPDFNumber(b), asPDFNumber(c), asPDFNumber(d), asPDFNumber(e), asPDFNumber(f)]);\n};\nexport var translate = function (xPos, yPos) {\n  return concatTransformationMatrix(1, 0, 0, 1, xPos, yPos);\n};\nexport var scale = function (xPos, yPos) {\n  return concatTransformationMatrix(xPos, 0, 0, yPos, 0, 0);\n};\nexport var rotateRadians = function (angle) {\n  return concatTransformationMatrix(cos(asNumber(angle)), sin(asNumber(angle)), -sin(asNumber(angle)), cos(asNumber(angle)), 0, 0);\n};\nexport var rotateDegrees = function (angle) {\n  return rotateRadians(degreesToRadians(asNumber(angle)));\n};\nexport var skewRadians = function (xSkewAngle, ySkewAngle) {\n  return concatTransformationMatrix(1, tan(asNumber(xSkewAngle)), tan(asNumber(ySkewAngle)), 1, 0, 0);\n};\nexport var skewDegrees = function (xSkewAngle, ySkewAngle) {\n  return skewRadians(degreesToRadians(asNumber(xSkewAngle)), degreesToRadians(asNumber(ySkewAngle)));\n};\nexport var setDashPattern = function (dashArray, dashPhase) {\n  return PDFOperator.of(Ops.SetLineDashPattern, [\"[\" + dashArray.map(asPDFNumber).join(' ') + \"]\", asPDFNumber(dashPhase)]);\n};\nexport var restoreDashPattern = function () {\n  return setDashPattern([], 0);\n};\nexport var LineCapStyle;\n(function (LineCapStyle) {\n  LineCapStyle[LineCapStyle[\"Butt\"] = 0] = \"Butt\";\n  LineCapStyle[LineCapStyle[\"Round\"] = 1] = \"Round\";\n  LineCapStyle[LineCapStyle[\"Projecting\"] = 2] = \"Projecting\";\n})(LineCapStyle || (LineCapStyle = {}));\nexport var setLineCap = function (style) {\n  return PDFOperator.of(Ops.SetLineCapStyle, [asPDFNumber(style)]);\n};\nexport var LineJoinStyle;\n(function (LineJoinStyle) {\n  LineJoinStyle[LineJoinStyle[\"Miter\"] = 0] = \"Miter\";\n  LineJoinStyle[LineJoinStyle[\"Round\"] = 1] = \"Round\";\n  LineJoinStyle[LineJoinStyle[\"Bevel\"] = 2] = \"Bevel\";\n})(LineJoinStyle || (LineJoinStyle = {}));\nexport var setLineJoin = function (style) {\n  return PDFOperator.of(Ops.SetLineJoinStyle, [asPDFNumber(style)]);\n};\nexport var setGraphicsState = function (state) {\n  return PDFOperator.of(Ops.SetGraphicsStateParams, [asPDFName(state)]);\n};\nexport var pushGraphicsState = function () {\n  return PDFOperator.of(Ops.PushGraphicsState);\n};\nexport var popGraphicsState = function () {\n  return PDFOperator.of(Ops.PopGraphicsState);\n};\nexport var setLineWidth = function (width) {\n  return PDFOperator.of(Ops.SetLineWidth, [asPDFNumber(width)]);\n};\n/* ==================== Path Construction Operators ==================== */\nexport var appendBezierCurve = function (x1, y1, x2, y2, x3, y3) {\n  return PDFOperator.of(Ops.AppendBezierCurve, [asPDFNumber(x1), asPDFNumber(y1), asPDFNumber(x2), asPDFNumber(y2), asPDFNumber(x3), asPDFNumber(y3)]);\n};\nexport var appendQuadraticCurve = function (x1, y1, x2, y2) {\n  return PDFOperator.of(Ops.CurveToReplicateInitialPoint, [asPDFNumber(x1), asPDFNumber(y1), asPDFNumber(x2), asPDFNumber(y2)]);\n};\nexport var closePath = function () {\n  return PDFOperator.of(Ops.ClosePath);\n};\nexport var moveTo = function (xPos, yPos) {\n  return PDFOperator.of(Ops.MoveTo, [asPDFNumber(xPos), asPDFNumber(yPos)]);\n};\nexport var lineTo = function (xPos, yPos) {\n  return PDFOperator.of(Ops.LineTo, [asPDFNumber(xPos), asPDFNumber(yPos)]);\n};\n/**\n * @param xPos x coordinate for the lower left corner of the rectangle\n * @param yPos y coordinate for the lower left corner of the rectangle\n * @param width width of the rectangle\n * @param height height of the rectangle\n */\nexport var rectangle = function (xPos, yPos, width, height) {\n  return PDFOperator.of(Ops.AppendRectangle, [asPDFNumber(xPos), asPDFNumber(yPos), asPDFNumber(width), asPDFNumber(height)]);\n};\n/**\n * @param xPos x coordinate for the lower left corner of the square\n * @param yPos y coordinate for the lower left corner of the square\n * @param size width and height of the square\n */\nexport var square = function (xPos, yPos, size) {\n  return rectangle(xPos, yPos, size, size);\n};\n/* ==================== Path Painting Operators ==================== */\nexport var stroke = function () {\n  return PDFOperator.of(Ops.StrokePath);\n};\nexport var fill = function () {\n  return PDFOperator.of(Ops.FillNonZero);\n};\nexport var fillAndStroke = function () {\n  return PDFOperator.of(Ops.FillNonZeroAndStroke);\n};\nexport var endPath = function () {\n  return PDFOperator.of(Ops.EndPath);\n};\n/* ==================== Text Positioning Operators ==================== */\nexport var nextLine = function () {\n  return PDFOperator.of(Ops.NextLine);\n};\nexport var moveText = function (x, y) {\n  return PDFOperator.of(Ops.MoveText, [asPDFNumber(x), asPDFNumber(y)]);\n};\n/* ==================== Text Showing Operators ==================== */\nexport var showText = function (text) {\n  return PDFOperator.of(Ops.ShowText, [text]);\n};\n/* ==================== Text State Operators ==================== */\nexport var beginText = function () {\n  return PDFOperator.of(Ops.BeginText);\n};\nexport var endText = function () {\n  return PDFOperator.of(Ops.EndText);\n};\nexport var setFontAndSize = function (name, size) {\n  return PDFOperator.of(Ops.SetFontAndSize, [asPDFName(name), asPDFNumber(size)]);\n};\nexport var setCharacterSpacing = function (spacing) {\n  return PDFOperator.of(Ops.SetCharacterSpacing, [asPDFNumber(spacing)]);\n};\nexport var setWordSpacing = function (spacing) {\n  return PDFOperator.of(Ops.SetWordSpacing, [asPDFNumber(spacing)]);\n};\n/** @param squeeze horizontal character spacing */\nexport var setCharacterSqueeze = function (squeeze) {\n  return PDFOperator.of(Ops.SetTextHorizontalScaling, [asPDFNumber(squeeze)]);\n};\nexport var setLineHeight = function (lineHeight) {\n  return PDFOperator.of(Ops.SetTextLineHeight, [asPDFNumber(lineHeight)]);\n};\nexport var setTextRise = function (rise) {\n  return PDFOperator.of(Ops.SetTextRise, [asPDFNumber(rise)]);\n};\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n  TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n  TextRenderingMode[TextRenderingMode[\"Outline\"] = 1] = \"Outline\";\n  TextRenderingMode[TextRenderingMode[\"FillAndOutline\"] = 2] = \"FillAndOutline\";\n  TextRenderingMode[TextRenderingMode[\"Invisible\"] = 3] = \"Invisible\";\n  TextRenderingMode[TextRenderingMode[\"FillAndClip\"] = 4] = \"FillAndClip\";\n  TextRenderingMode[TextRenderingMode[\"OutlineAndClip\"] = 5] = \"OutlineAndClip\";\n  TextRenderingMode[TextRenderingMode[\"FillAndOutlineAndClip\"] = 6] = \"FillAndOutlineAndClip\";\n  TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\nexport var setTextRenderingMode = function (mode) {\n  return PDFOperator.of(Ops.SetTextRenderingMode, [asPDFNumber(mode)]);\n};\nexport var setTextMatrix = function (a, b, c, d, e, f) {\n  return PDFOperator.of(Ops.SetTextMatrix, [asPDFNumber(a), asPDFNumber(b), asPDFNumber(c), asPDFNumber(d), asPDFNumber(e), asPDFNumber(f)]);\n};\nexport var rotateAndSkewTextRadiansAndTranslate = function (rotationAngle, xSkewAngle, ySkewAngle, x, y) {\n  return setTextMatrix(cos(asNumber(rotationAngle)), sin(asNumber(rotationAngle)) + tan(asNumber(xSkewAngle)), -sin(asNumber(rotationAngle)) + tan(asNumber(ySkewAngle)), cos(asNumber(rotationAngle)), x, y);\n};\nexport var rotateAndSkewTextDegreesAndTranslate = function (rotationAngle, xSkewAngle, ySkewAngle, x, y) {\n  return rotateAndSkewTextRadiansAndTranslate(degreesToRadians(asNumber(rotationAngle)), degreesToRadians(asNumber(xSkewAngle)), degreesToRadians(asNumber(ySkewAngle)), x, y);\n};\n/* ==================== XObject Operator ==================== */\nexport var drawObject = function (name) {\n  return PDFOperator.of(Ops.DrawObject, [asPDFName(name)]);\n};\n/* ==================== Color Operators ==================== */\nexport var setFillingGrayscaleColor = function (gray) {\n  return PDFOperator.of(Ops.NonStrokingColorGray, [asPDFNumber(gray)]);\n};\nexport var setStrokingGrayscaleColor = function (gray) {\n  return PDFOperator.of(Ops.StrokingColorGray, [asPDFNumber(gray)]);\n};\nexport var setFillingRgbColor = function (red, green, blue) {\n  return PDFOperator.of(Ops.NonStrokingColorRgb, [asPDFNumber(red), asPDFNumber(green), asPDFNumber(blue)]);\n};\nexport var setStrokingRgbColor = function (red, green, blue) {\n  return PDFOperator.of(Ops.StrokingColorRgb, [asPDFNumber(red), asPDFNumber(green), asPDFNumber(blue)]);\n};\nexport var setFillingCmykColor = function (cyan, magenta, yellow, key) {\n  return PDFOperator.of(Ops.NonStrokingColorCmyk, [asPDFNumber(cyan), asPDFNumber(magenta), asPDFNumber(yellow), asPDFNumber(key)]);\n};\nexport var setStrokingCmykColor = function (cyan, magenta, yellow, key) {\n  return PDFOperator.of(Ops.StrokingColorCmyk, [asPDFNumber(cyan), asPDFNumber(magenta), asPDFNumber(yellow), asPDFNumber(key)]);\n};\n/* ==================== Marked Content Operators ==================== */\nexport var beginMarkedContent = function (tag) {\n  return PDFOperator.of(Ops.BeginMarkedContent, [asPDFName(tag)]);\n};\nexport var endMarkedContent = function () {\n  return PDFOperator.of(Ops.EndMarkedContent);\n};","map":{"version":3,"sources":["../../src/api/operators.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { asNumber, asPDFName, asPDFNumber } from \"./objects\";\nimport { degreesToRadians } from \"./rotations\";\nimport { PDFOperator, PDFOperatorNames as Ops, } from \"../core\";\n/* ==================== Clipping Path Operators ==================== */\nexport var clip = function () { return PDFOperator.of(Ops.ClipNonZero); };\nexport var clipEvenOdd = function () { return PDFOperator.of(Ops.ClipEvenOdd); };\n/* ==================== Graphics State Operators ==================== */\nvar cos = Math.cos, sin = Math.sin, tan = Math.tan;\nexport var concatTransformationMatrix = function (a, b, c, d, e, f) {\n    return PDFOperator.of(Ops.ConcatTransformationMatrix, [\n        asPDFNumber(a),\n        asPDFNumber(b),\n        asPDFNumber(c),\n        asPDFNumber(d),\n        asPDFNumber(e),\n        asPDFNumber(f),\n    ]);\n};\nexport var translate = function (xPos, yPos) {\n    return concatTransformationMatrix(1, 0, 0, 1, xPos, yPos);\n};\nexport var scale = function (xPos, yPos) {\n    return concatTransformationMatrix(xPos, 0, 0, yPos, 0, 0);\n};\nexport var rotateRadians = function (angle) {\n    return concatTransformationMatrix(cos(asNumber(angle)), sin(asNumber(angle)), -sin(asNumber(angle)), cos(asNumber(angle)), 0, 0);\n};\nexport var rotateDegrees = function (angle) {\n    return rotateRadians(degreesToRadians(asNumber(angle)));\n};\nexport var skewRadians = function (xSkewAngle, ySkewAngle) {\n    return concatTransformationMatrix(1, tan(asNumber(xSkewAngle)), tan(asNumber(ySkewAngle)), 1, 0, 0);\n};\nexport var skewDegrees = function (xSkewAngle, ySkewAngle) {\n    return skewRadians(degreesToRadians(asNumber(xSkewAngle)), degreesToRadians(asNumber(ySkewAngle)));\n};\nexport var setDashPattern = function (dashArray, dashPhase) {\n    return PDFOperator.of(Ops.SetLineDashPattern, [\n        \"[\" + dashArray.map(asPDFNumber).join(' ') + \"]\",\n        asPDFNumber(dashPhase),\n    ]);\n};\nexport var restoreDashPattern = function () { return setDashPattern([], 0); };\nexport var LineCapStyle;\n(function (LineCapStyle) {\n    LineCapStyle[LineCapStyle[\"Butt\"] = 0] = \"Butt\";\n    LineCapStyle[LineCapStyle[\"Round\"] = 1] = \"Round\";\n    LineCapStyle[LineCapStyle[\"Projecting\"] = 2] = \"Projecting\";\n})(LineCapStyle || (LineCapStyle = {}));\nexport var setLineCap = function (style) {\n    return PDFOperator.of(Ops.SetLineCapStyle, [asPDFNumber(style)]);\n};\nexport var LineJoinStyle;\n(function (LineJoinStyle) {\n    LineJoinStyle[LineJoinStyle[\"Miter\"] = 0] = \"Miter\";\n    LineJoinStyle[LineJoinStyle[\"Round\"] = 1] = \"Round\";\n    LineJoinStyle[LineJoinStyle[\"Bevel\"] = 2] = \"Bevel\";\n})(LineJoinStyle || (LineJoinStyle = {}));\nexport var setLineJoin = function (style) {\n    return PDFOperator.of(Ops.SetLineJoinStyle, [asPDFNumber(style)]);\n};\nexport var setGraphicsState = function (state) {\n    return PDFOperator.of(Ops.SetGraphicsStateParams, [asPDFName(state)]);\n};\nexport var pushGraphicsState = function () { return PDFOperator.of(Ops.PushGraphicsState); };\nexport var popGraphicsState = function () { return PDFOperator.of(Ops.PopGraphicsState); };\nexport var setLineWidth = function (width) {\n    return PDFOperator.of(Ops.SetLineWidth, [asPDFNumber(width)]);\n};\n/* ==================== Path Construction Operators ==================== */\nexport var appendBezierCurve = function (x1, y1, x2, y2, x3, y3) {\n    return PDFOperator.of(Ops.AppendBezierCurve, [\n        asPDFNumber(x1),\n        asPDFNumber(y1),\n        asPDFNumber(x2),\n        asPDFNumber(y2),\n        asPDFNumber(x3),\n        asPDFNumber(y3),\n    ]);\n};\nexport var appendQuadraticCurve = function (x1, y1, x2, y2) {\n    return PDFOperator.of(Ops.CurveToReplicateInitialPoint, [\n        asPDFNumber(x1),\n        asPDFNumber(y1),\n        asPDFNumber(x2),\n        asPDFNumber(y2),\n    ]);\n};\nexport var closePath = function () { return PDFOperator.of(Ops.ClosePath); };\nexport var moveTo = function (xPos, yPos) {\n    return PDFOperator.of(Ops.MoveTo, [asPDFNumber(xPos), asPDFNumber(yPos)]);\n};\nexport var lineTo = function (xPos, yPos) {\n    return PDFOperator.of(Ops.LineTo, [asPDFNumber(xPos), asPDFNumber(yPos)]);\n};\n/**\n * @param xPos x coordinate for the lower left corner of the rectangle\n * @param yPos y coordinate for the lower left corner of the rectangle\n * @param width width of the rectangle\n * @param height height of the rectangle\n */\nexport var rectangle = function (xPos, yPos, width, height) {\n    return PDFOperator.of(Ops.AppendRectangle, [\n        asPDFNumber(xPos),\n        asPDFNumber(yPos),\n        asPDFNumber(width),\n        asPDFNumber(height),\n    ]);\n};\n/**\n * @param xPos x coordinate for the lower left corner of the square\n * @param yPos y coordinate for the lower left corner of the square\n * @param size width and height of the square\n */\nexport var square = function (xPos, yPos, size) {\n    return rectangle(xPos, yPos, size, size);\n};\n/* ==================== Path Painting Operators ==================== */\nexport var stroke = function () { return PDFOperator.of(Ops.StrokePath); };\nexport var fill = function () { return PDFOperator.of(Ops.FillNonZero); };\nexport var fillAndStroke = function () { return PDFOperator.of(Ops.FillNonZeroAndStroke); };\nexport var endPath = function () { return PDFOperator.of(Ops.EndPath); };\n/* ==================== Text Positioning Operators ==================== */\nexport var nextLine = function () { return PDFOperator.of(Ops.NextLine); };\nexport var moveText = function (x, y) {\n    return PDFOperator.of(Ops.MoveText, [asPDFNumber(x), asPDFNumber(y)]);\n};\n/* ==================== Text Showing Operators ==================== */\nexport var showText = function (text) {\n    return PDFOperator.of(Ops.ShowText, [text]);\n};\n/* ==================== Text State Operators ==================== */\nexport var beginText = function () { return PDFOperator.of(Ops.BeginText); };\nexport var endText = function () { return PDFOperator.of(Ops.EndText); };\nexport var setFontAndSize = function (name, size) { return PDFOperator.of(Ops.SetFontAndSize, [asPDFName(name), asPDFNumber(size)]); };\nexport var setCharacterSpacing = function (spacing) {\n    return PDFOperator.of(Ops.SetCharacterSpacing, [asPDFNumber(spacing)]);\n};\nexport var setWordSpacing = function (spacing) {\n    return PDFOperator.of(Ops.SetWordSpacing, [asPDFNumber(spacing)]);\n};\n/** @param squeeze horizontal character spacing */\nexport var setCharacterSqueeze = function (squeeze) {\n    return PDFOperator.of(Ops.SetTextHorizontalScaling, [asPDFNumber(squeeze)]);\n};\nexport var setLineHeight = function (lineHeight) {\n    return PDFOperator.of(Ops.SetTextLineHeight, [asPDFNumber(lineHeight)]);\n};\nexport var setTextRise = function (rise) {\n    return PDFOperator.of(Ops.SetTextRise, [asPDFNumber(rise)]);\n};\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    TextRenderingMode[TextRenderingMode[\"Outline\"] = 1] = \"Outline\";\n    TextRenderingMode[TextRenderingMode[\"FillAndOutline\"] = 2] = \"FillAndOutline\";\n    TextRenderingMode[TextRenderingMode[\"Invisible\"] = 3] = \"Invisible\";\n    TextRenderingMode[TextRenderingMode[\"FillAndClip\"] = 4] = \"FillAndClip\";\n    TextRenderingMode[TextRenderingMode[\"OutlineAndClip\"] = 5] = \"OutlineAndClip\";\n    TextRenderingMode[TextRenderingMode[\"FillAndOutlineAndClip\"] = 6] = \"FillAndOutlineAndClip\";\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\nexport var setTextRenderingMode = function (mode) {\n    return PDFOperator.of(Ops.SetTextRenderingMode, [asPDFNumber(mode)]);\n};\nexport var setTextMatrix = function (a, b, c, d, e, f) {\n    return PDFOperator.of(Ops.SetTextMatrix, [\n        asPDFNumber(a),\n        asPDFNumber(b),\n        asPDFNumber(c),\n        asPDFNumber(d),\n        asPDFNumber(e),\n        asPDFNumber(f),\n    ]);\n};\nexport var rotateAndSkewTextRadiansAndTranslate = function (rotationAngle, xSkewAngle, ySkewAngle, x, y) {\n    return setTextMatrix(cos(asNumber(rotationAngle)), sin(asNumber(rotationAngle)) + tan(asNumber(xSkewAngle)), -sin(asNumber(rotationAngle)) + tan(asNumber(ySkewAngle)), cos(asNumber(rotationAngle)), x, y);\n};\nexport var rotateAndSkewTextDegreesAndTranslate = function (rotationAngle, xSkewAngle, ySkewAngle, x, y) {\n    return rotateAndSkewTextRadiansAndTranslate(degreesToRadians(asNumber(rotationAngle)), degreesToRadians(asNumber(xSkewAngle)), degreesToRadians(asNumber(ySkewAngle)), x, y);\n};\n/* ==================== XObject Operator ==================== */\nexport var drawObject = function (name) {\n    return PDFOperator.of(Ops.DrawObject, [asPDFName(name)]);\n};\n/* ==================== Color Operators ==================== */\nexport var setFillingGrayscaleColor = function (gray) {\n    return PDFOperator.of(Ops.NonStrokingColorGray, [asPDFNumber(gray)]);\n};\nexport var setStrokingGrayscaleColor = function (gray) {\n    return PDFOperator.of(Ops.StrokingColorGray, [asPDFNumber(gray)]);\n};\nexport var setFillingRgbColor = function (red, green, blue) {\n    return PDFOperator.of(Ops.NonStrokingColorRgb, [\n        asPDFNumber(red),\n        asPDFNumber(green),\n        asPDFNumber(blue),\n    ]);\n};\nexport var setStrokingRgbColor = function (red, green, blue) {\n    return PDFOperator.of(Ops.StrokingColorRgb, [\n        asPDFNumber(red),\n        asPDFNumber(green),\n        asPDFNumber(blue),\n    ]);\n};\nexport var setFillingCmykColor = function (cyan, magenta, yellow, key) {\n    return PDFOperator.of(Ops.NonStrokingColorCmyk, [\n        asPDFNumber(cyan),\n        asPDFNumber(magenta),\n        asPDFNumber(yellow),\n        asPDFNumber(key),\n    ]);\n};\nexport var setStrokingCmykColor = function (cyan, magenta, yellow, key) {\n    return PDFOperator.of(Ops.StrokingColorCmyk, [\n        asPDFNumber(cyan),\n        asPDFNumber(magenta),\n        asPDFNumber(yellow),\n        asPDFNumber(key),\n    ]);\n};\n/* ==================== Marked Content Operators ==================== */\nexport var beginMarkedContent = function (tag) {\n    return PDFOperator.of(Ops.BeginMarkedContent, [asPDFName(tag)]);\n};\nexport var endMarkedContent = function () { return PDFOperator.of(Ops.EndMarkedContent); };\n//# sourceMappingURL=operators.js.map"]},"metadata":{},"sourceType":"module"}