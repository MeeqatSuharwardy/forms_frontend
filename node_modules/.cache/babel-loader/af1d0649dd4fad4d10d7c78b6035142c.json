{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFAcroButton from \"./PDFAcroButton\";\nimport { AcroButtonFlags } from \"./flags\";\nimport { InvalidAcroFieldValueError } from \"../errors\";\nvar PDFAcroRadioButton = /** @class */function (_super) {\n  __extends(PDFAcroRadioButton, _super);\n  function PDFAcroRadioButton() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PDFAcroRadioButton.prototype.setValue = function (value) {\n    var onValues = this.getOnValues();\n    if (!onValues.includes(value) && value !== PDFName.of('Off')) {\n      throw new InvalidAcroFieldValueError();\n    }\n    this.dict.set(PDFName.of('V'), value);\n    var widgets = this.getWidgets();\n    for (var idx = 0, len = widgets.length; idx < len; idx++) {\n      var widget = widgets[idx];\n      var state = widget.getOnValue() === value ? value : PDFName.of('Off');\n      widget.setAppearanceState(state);\n    }\n  };\n  PDFAcroRadioButton.prototype.getValue = function () {\n    var v = this.V();\n    if (v instanceof PDFName) return v;\n    return PDFName.of('Off');\n  };\n  PDFAcroRadioButton.prototype.getOnValues = function () {\n    var widgets = this.getWidgets();\n    var onValues = [];\n    for (var idx = 0, len = widgets.length; idx < len; idx++) {\n      var onValue = widgets[idx].getOnValue();\n      if (onValue) onValues.push(onValue);\n    }\n    return onValues;\n  };\n  PDFAcroRadioButton.fromDict = function (dict, ref) {\n    return new PDFAcroRadioButton(dict, ref);\n  };\n  PDFAcroRadioButton.create = function (context) {\n    var dict = context.obj({\n      FT: 'Btn',\n      Ff: AcroButtonFlags.Radio,\n      Kids: []\n    });\n    var ref = context.register(dict);\n    return new PDFAcroRadioButton(dict, ref);\n  };\n  return PDFAcroRadioButton;\n}(PDFAcroButton);\nexport default PDFAcroRadioButton;","map":{"version":3,"sources":["../../../src/core/acroform/PDFAcroRadioButton.ts"],"names":[],"mappings":";AAEA,OAAO,OAAO,MAAA,oBAAA;AACd,OAAO,aAAa,MAAA,iBAAA;AAEpB,SAAS,eAAe,QAAE,SAAA;AAC1B,SAAS,0BAA0B,QAAE,WAAA;AAErC,IAAA,kBAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAiC,SAAA,CAAA,kBAAA,EAAA,MAAA,CAAA;EAAjC,SAAA,kBAAA,CAAA,EAAA;;EA+CA;EAjCE,kBAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,UAAS,KAAc,EAAA;IACrB,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAA,CAAE;IACnC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;MAC5D,MAAM,IAAI,0BAA0B,CAAA,CAAE;IACvC;IAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC;IAErC,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAA,CAAE;IACjC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE;MACxD,IAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC;MAC3B,IAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAA,CAAE,KAAK,KAAK,GAAG,KAAK,GAAG,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC;MACvE,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC;IACjC;EACH,CAAC;EAED,kBAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;IACE,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAA,CAAE;IAClB,IAAI,CAAC,YAAY,OAAO,EAAE,OAAO,CAAC;IAClC,OAAO,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,kBAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACE,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAA,CAAE;IAEjC,IAAM,QAAQ,GAAc,EAAE;IAC9B,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE;MACxD,IAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,UAAU,CAAA,CAAE;MACzC,IAAI,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;IACpC;IAED,OAAO,QAAQ;EACjB,CAAC;EA7CM,kBAAA,CAAA,QAAQ,GAAG,UAAC,IAAa,EAAE,GAAW,EAAA;IAC3C,OAAA,IAAI,kBAAkB,CAAC,IAAI,EAAE,GAAG,CAAC;EAAjC,CAAiC;EAE5B,kBAAA,CAAA,MAAM,GAAG,UAAC,OAAmB,EAAA;IAClC,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC;MACvB,EAAE,EAAE,KAAK;MACT,EAAE,EAAE,eAAe,CAAC,KAAK;MACzB,IAAI,EAAE;KACP,CAAC;IACF,IAAM,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC;IAClC,OAAO,IAAI,kBAAkB,CAAC,IAAI,EAAE,GAAG,CAAC;EAC1C,CAAC;EAmCH,OAAA,kBAAC;CAAA,CA/CgC,aAAa,CAAA;AAiD9C,eAAe,kBAAkB","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFAcroButton from \"./PDFAcroButton\";\nimport { AcroButtonFlags } from \"./flags\";\nimport { InvalidAcroFieldValueError } from \"../errors\";\nvar PDFAcroRadioButton = /** @class */ (function (_super) {\n    __extends(PDFAcroRadioButton, _super);\n    function PDFAcroRadioButton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PDFAcroRadioButton.prototype.setValue = function (value) {\n        var onValues = this.getOnValues();\n        if (!onValues.includes(value) && value !== PDFName.of('Off')) {\n            throw new InvalidAcroFieldValueError();\n        }\n        this.dict.set(PDFName.of('V'), value);\n        var widgets = this.getWidgets();\n        for (var idx = 0, len = widgets.length; idx < len; idx++) {\n            var widget = widgets[idx];\n            var state = widget.getOnValue() === value ? value : PDFName.of('Off');\n            widget.setAppearanceState(state);\n        }\n    };\n    PDFAcroRadioButton.prototype.getValue = function () {\n        var v = this.V();\n        if (v instanceof PDFName)\n            return v;\n        return PDFName.of('Off');\n    };\n    PDFAcroRadioButton.prototype.getOnValues = function () {\n        var widgets = this.getWidgets();\n        var onValues = [];\n        for (var idx = 0, len = widgets.length; idx < len; idx++) {\n            var onValue = widgets[idx].getOnValue();\n            if (onValue)\n                onValues.push(onValue);\n        }\n        return onValues;\n    };\n    PDFAcroRadioButton.fromDict = function (dict, ref) {\n        return new PDFAcroRadioButton(dict, ref);\n    };\n    PDFAcroRadioButton.create = function (context) {\n        var dict = context.obj({\n            FT: 'Btn',\n            Ff: AcroButtonFlags.Radio,\n            Kids: [],\n        });\n        var ref = context.register(dict);\n        return new PDFAcroRadioButton(dict, ref);\n    };\n    return PDFAcroRadioButton;\n}(PDFAcroButton));\nexport default PDFAcroRadioButton;\n//# sourceMappingURL=PDFAcroRadioButton.js.map"]},"metadata":{},"sourceType":"module"}