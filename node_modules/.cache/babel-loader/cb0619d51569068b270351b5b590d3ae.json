{"ast":null,"code":"var _jsxFileName = \"/Users/meeqatsuharwardy/forms_frontend/src/components/Forms/new_forms/I9/i9.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { PDFDocument } from \"pdf-lib\";\nimport I9 from \"../../../../assets/files/i-9.pdf\";\nexport default function PDFViewer() {\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const [pdfBytes, setPdfBytes] = useState(null); // Store the PDF bytes for submission\n\n  // Load the initial PDF and create a blob URL\n  useEffect(() => {\n    async function loadInitialPDF() {\n      const response = await fetch(I9);\n      const blob = await response.blob();\n      const url = URL.createObjectURL(blob);\n      setPdfUrl(url);\n    }\n    loadInitialPDF().catch(console.error);\n  }, []);\n  const onFileChange = async event => {\n    const uploadedFile = event.target.files[0];\n    if (uploadedFile) {\n      const pdfDoc = await PDFDocument.load(await uploadedFile.arrayBuffer());\n      // Example edit: adding text to the first page\n      const pages = pdfDoc.getPages();\n      const firstPage = pages[0];\n      firstPage.drawText(\"This is an edited text!\", {\n        x: 50,\n        y: firstPage.getHeight() - 100,\n        size: 24\n      });\n      const newPdfBytes = await pdfDoc.save();\n      const blob = new Blob([newPdfBytes], {\n        type: \"application/pdf\"\n      });\n      const url = URL.createObjectURL(blob);\n      setPdfUrl(url);\n      setPdfBytes(newPdfBytes); // Save bytes for submission\n    }\n  };\n  const onFormSubmit = async event => {\n    event.preventDefault();\n    if (!pdfBytes) {\n      alert(\"No edited PDF to submit.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"full_name\", event.target.full_name.value);\n    formData.append(\"date_of_birth\", event.target.date_of_birth.value);\n    formData.append(\"submitted_year\", new Date().getFullYear());\n    formData.append(\"pdf_file\", new Blob([pdfBytes], {\n      type: \"application/pdf\"\n    }), \"edited.pdf\");\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/upload_pdf/\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      alert(\"PDF submitted successfully!\");\n      console.log(data);\n    } catch (error) {\n      console.error(\"Error submitting PDF:\", error);\n      alert(\"Failed to submit PDF.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: onFileChange,\n    accept: \"application/pdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), pdfUrl ? /*#__PURE__*/React.createElement(\"iframe\", {\n    src: pdfUrl,\n    style: {\n      width: \"100%\",\n      height: \"500px\",\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Loading PDF...\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onFormSubmit,\n    enctype: \"multipart/form-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"full_name\",\n    placeholder: \"Full Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"date_of_birth\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Save PDF\")));\n}","map":{"version":3,"names":["React","useState","useEffect","PDFDocument","I9","PDFViewer","pdfUrl","setPdfUrl","pdfBytes","setPdfBytes","loadInitialPDF","response","fetch","blob","url","URL","createObjectURL","catch","console","error","onFileChange","event","uploadedFile","target","files","pdfDoc","load","arrayBuffer","pages","getPages","firstPage","drawText","x","y","getHeight","size","newPdfBytes","save","Blob","type","onFormSubmit","preventDefault","alert","formData","FormData","append","full_name","value","date_of_birth","Date","getFullYear","method","body","data","json","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","accept","src","style","width","height","border","onSubmit","enctype","name","placeholder","required"],"sources":["/Users/meeqatsuharwardy/forms_frontend/src/components/Forms/new_forms/I9/i9.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { PDFDocument } from \"pdf-lib\";\nimport I9 from \"../../../../assets/files/i-9.pdf\";\n\nexport default function PDFViewer() {\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const [pdfBytes, setPdfBytes] = useState(null); // Store the PDF bytes for submission\n\n  // Load the initial PDF and create a blob URL\n  useEffect(() => {\n    async function loadInitialPDF() {\n      const response = await fetch(I9);\n      const blob = await response.blob();\n      const url = URL.createObjectURL(blob);\n      setPdfUrl(url);\n    }\n\n    loadInitialPDF().catch(console.error);\n  }, []);\n\n  const onFileChange = async (event) => {\n    const uploadedFile = event.target.files[0];\n    if (uploadedFile) {\n      const pdfDoc = await PDFDocument.load(await uploadedFile.arrayBuffer());\n      // Example edit: adding text to the first page\n      const pages = pdfDoc.getPages();\n      const firstPage = pages[0];\n      firstPage.drawText(\"This is an edited text!\", {\n        x: 50,\n        y: firstPage.getHeight() - 100,\n        size: 24,\n      });\n\n      const newPdfBytes = await pdfDoc.save();\n      const blob = new Blob([newPdfBytes], { type: \"application/pdf\" });\n      const url = URL.createObjectURL(blob);\n      setPdfUrl(url);\n      setPdfBytes(newPdfBytes); // Save bytes for submission\n    }\n  };\n\n  const onFormSubmit = async (event) => {\n    event.preventDefault();\n    if (!pdfBytes) {\n      alert(\"No edited PDF to submit.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"full_name\", event.target.full_name.value);\n    formData.append(\"date_of_birth\", event.target.date_of_birth.value);\n    formData.append(\"submitted_year\", new Date().getFullYear());\n    formData.append(\n      \"pdf_file\",\n      new Blob([pdfBytes], { type: \"application/pdf\" }),\n      \"edited.pdf\"\n    );\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/upload_pdf/\", {\n        method: \"POST\",\n        body: formData,\n      });\n      const data = await response.json();\n      alert(\"PDF submitted successfully!\");\n      console.log(data);\n    } catch (error) {\n      console.error(\"Error submitting PDF:\", error);\n      alert(\"Failed to submit PDF.\");\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={onFileChange} accept=\"application/pdf\" />\n      {pdfUrl ? (\n        <iframe\n          src={pdfUrl}\n          style={{ width: \"100%\", height: \"500px\", border: \"none\" }}\n        />\n      ) : (\n        <p>Loading PDF...</p>\n      )}\n      <form onSubmit={onFormSubmit} enctype=\"multipart/form-data\">\n        <input name=\"full_name\" placeholder=\"Full Name\" required />\n        <input type=\"date\" name=\"date_of_birth\" required />\n        <button type=\"submit\">Save PDF</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}