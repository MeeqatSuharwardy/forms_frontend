{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import{onPressSwitchBordButton}from\"../actions\";import{Dropdown}from\"react-bootstrap\";import{Link}from\"react-router-dom\";class SwitchBordCard extends React.Component{render(){const{Buttons,OnPressSwitch,IsSwitch,onPressAllOnLight,onPressAllOffLight}=this.props;return/*#__PURE__*/React.createElement(\"div\",{className:\"col-lg-4 col-md-4 col-sm-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"header\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Lights Indoor\"),/*#__PURE__*/React.createElement(Dropdown,{as:\"ul\",className:\"header-dropdown\"},/*#__PURE__*/React.createElement(Dropdown.Toggle,{variant:\"success\",as:\"li\",id:\"dropdown-basic\"},/*#__PURE__*/React.createElement(Dropdown.Menu,{as:\"ul\",className:\"dropdown-menu dropdown-menu-right\"},/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(Link,{to:\"#\",onClick:onPressAllOnLight},\"All On\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(Link,{to:\"#\",onClick:onPressAllOffLight},\"All Off\"))))),/*#__PURE__*/React.createElement(\"div\",{className:\"body\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"list-unstyled basic-list ng-star-inserted\"},Buttons.map((Button,index)=>{return/*#__PURE__*/React.createElement(\"li\",{key:index,className:!Button.NotConnected?IsSwitch[index]?\"ng-star-inserted text-warning\":\"ng-star-inserted\":\"text-danger ng-star-inserted\"},Button.title,/*#__PURE__*/React.createElement(Link,{to:\"#\",onClick:()=>OnPressSwitch(index)},/*#__PURE__*/React.createElement(\"span\",{className:IsSwitch[index]===true&&!Button.NotConnected?\"badge\":\"badge d-none\"},\"Off\"),/*#__PURE__*/React.createElement(\"span\",{className:IsSwitch[index]===false&&!Button.NotConnected?\"badge\":\"badge d-none\"},\"On\")),/*#__PURE__*/React.createElement(\"span\",{className:Button.NotConnected?\"ng-star-inserted \":\"ng-star-inserted d-none\"},\"Not Connected\"));}))))));}}const mapStateToProps=_ref=>{let{ioTReducer}=_ref;return{isSecuritySystem:ioTReducer.isSecuritySystem};};export default connect(mapStateToProps,{onPressSwitchBordButton})(SwitchBordCard);","map":{"version":3,"names":["React","connect","onPressSwitchBordButton","Dropdown","Link","SwitchBordCard","Component","render","Buttons","OnPressSwitch","IsSwitch","onPressAllOnLight","onPressAllOffLight","props","createElement","className","as","Toggle","variant","id","Menu","to","onClick","map","Button","index","key","NotConnected","title","mapStateToProps","_ref","ioTReducer","isSecuritySystem"],"sources":["/Users/meeqatsuharwardy/forms_frontend/src/components/SwitchBordCard.js"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { onPressSwitchBordButton } from \"../actions\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SwitchBordCard extends React.Component {\r\n  render() {\r\n    const {\r\n      Buttons,\r\n      OnPressSwitch,\r\n      IsSwitch,\r\n      onPressAllOnLight,\r\n      onPressAllOffLight,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"col-lg-4 col-md-4 col-sm-12\">\r\n        <div className=\"card\">\r\n          <div className=\"header\">\r\n            <h2>Lights Indoor</h2>\r\n            <Dropdown as=\"ul\" className=\"header-dropdown\">\r\n              <Dropdown.Toggle variant=\"success\" as=\"li\" id=\"dropdown-basic\">\r\n                <Dropdown.Menu\r\n                  as=\"ul\"\r\n                  className=\"dropdown-menu dropdown-menu-right\"\r\n                >\r\n                  <li>\r\n                    <Link to=\"#\" onClick={onPressAllOnLight}>All On</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to=\"#\" onClick={onPressAllOffLight}>All Off</Link>\r\n                  </li>\r\n                </Dropdown.Menu>\r\n              </Dropdown.Toggle>\r\n            </Dropdown>\r\n            <div className=\"body\">\r\n              <ul className=\"list-unstyled basic-list ng-star-inserted\">\r\n                {Buttons.map((Button, index) => {\r\n                  return (\r\n                    <li\r\n                      key={index}\r\n                      className={\r\n                        !Button.NotConnected\r\n                          ? IsSwitch[index]\r\n                            ? \"ng-star-inserted text-warning\"\r\n                            : \"ng-star-inserted\"\r\n                          : \"text-danger ng-star-inserted\"\r\n                      }\r\n                    >\r\n                      {Button.title}\r\n                      <Link to=\"#\" onClick={() => OnPressSwitch(index)}>\r\n                        <span\r\n                          className={\r\n                            IsSwitch[index] === true && !Button.NotConnected\r\n                              ? \"badge\"\r\n                              : \"badge d-none\"\r\n                          }\r\n                        >\r\n                          Off\r\n                        </span>\r\n                        <span\r\n                          className={\r\n                            IsSwitch[index] === false && !Button.NotConnected\r\n                              ? \"badge\"\r\n                              : \"badge d-none\"\r\n                          }\r\n                        >\r\n                          On\r\n                        </span>\r\n                      </Link>\r\n                      <span\r\n                        className={\r\n                          Button.NotConnected\r\n                            ? \"ng-star-inserted \"\r\n                            : \"ng-star-inserted d-none\"\r\n                        }\r\n                      >\r\n                        Not Connected\r\n                      </span>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSwitchBordCard.propTypes = {};\r\n\r\nconst mapStateToProps = ({ ioTReducer }) => ({\r\n  isSecuritySystem: ioTReducer.isSecuritySystem,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  onPressSwitchBordButton,\r\n})(SwitchBordCard);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}